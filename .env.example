# Copy this file to `.env`
CURRENT_USER=1000:1000
LOG_JSON_FORMAT=false
LOG_LEVEL=info
POSTGRES_USERNAME=postgres
POSTGRES_PASSWORD=something_secret
POSTGRES_DB=ttasmarthub
POSTGRES_HOST=localhost
OIDC_AUTH_METHOD=pkce
# Use this client-id to test locally (using localhost)
AUTH_CLIENT_ID=urn:gov:gsa:openidconnect.profiles:sp:sso:ohs:tta-hub-local
# AUTH_CLIENT_ID=urn:gov:gsa:openidconnect.profiles:sp:sso:ohs:tta-hub
SESSION_SECRET=secret
JWT_SECRET=secret
TTA_SMART_HUB_URI=http://localhost:3000
AUTH_BASE=https://test.hsesinfo.org/oidc
# AUTH_BASE=https://staging.hses.ohs.acf.hhs.gov/oidc
# Use to test using the login.gov sandbox environment
# AUTH_BASE=https://idp.int.identitysandbox.gov
# This env variable should go away soon in favor of TTA_SMART_HUB_URI
REDIRECT_URI_HOST=http://localhost:8080
# CURRENT_USER_ID controls the logged in user when BYPASS_AUTH is set to true.
# This only works in non-production environments
CURRENT_USER_ID=1
# NEW_RELIC_LICENSE_KEY can be omitted in local development
NEW_RELIC_LICENSE_KEY=secret_key
# Set to false to require user to go through auth flow, never true in production envs
BYPASS_AUTH=true
HSES_DATA_FILE_URL=url
HSES_DATA_USERNAME=username
HSES_DATA_PASSWORD=password
# In production, Sequelize instance is created with a postgres URI.
# This URI is automatically dropped into the cloud.gov environment as the env variable DATABASE_URL
DATABASE_URL=secret
# Local development variables to support s3 endpoint development and testing
# Comment this out if you are not using docker
S3_ENDPOINT=http://minio:9000
# Uncomment the following if you aren't using docker for development. Note: This requires minio to be running locally on port 9000
## and manually creating the bucket specified in $S3_BUCKET
# S3_ENDPOINT=http://localhost:9000
S3_BUCKET=ttadp-test
AWS_SECRET_ACCESS_KEY=EXAMPLESECRETKEY
AWS_ACCESS_KEY_ID=EXAMPLEID
MINIO_ROOT_PASSWORD=EXAMPLESECRETKEY
MINIO_ROOT_USER=EXAMPLEID
# if using docker
CLAMAV_ENDPOINT=https://clamav-rest:9443
# if running locally
# CLAMAV_ENDPOINT=http://localhost:8081
REDIS_PASS=SUPERSECUREPASSWORD

# Email Address that notifications should come from
FROM_EMAIL_ADDRESS=ttasmarthub@test.gov

# Uncomment the following two variables if you want to test notifications
# SEND_NOTIFICATIONS=true
# SEND_NON_PRODUCTION_NOTIFICATIONS=true

# SMTP Settings
# For local development, SMTP_HOST is set in docker-compose.override.yml.
# If you are not using docker to run the application, you can set this to localhost
# SMTP_HOST=smtp.test.gov
# SMTP_USER=user@test.gov
# SMTP_PASS=supersecurepassword
# SMTP_PORT=465

# SMTPSECURE should be set to true if SMTPPORT is 465. Otherwise it should be false
# SMTP_SECURE=true
# SMTP_IGNORE_TLS=true for the HHS server; false for AWS SES

# The following settings are for use with MailCatcher for local development.
# For local development, SMTP_HOST is set in docker-compose.override.yml.
# If you are not using docker to run the application, you can set this to localhost
# SMTP_HOST=localhost
SMTP_USER=''
SMTP_PASS=''
SMTP_PORT=1025
SMTP_SECURE=false
SMTP_IGNORE_TLS=false
SMTP_HOST_TEST=localhost
SMTP_PORT_TEST=1025

# This is the flag that tells the application to use the redis cache to store
# the results of queries that require heavy calculations (e.g. the Resource Dashboard)
# you can set this to true for debugging and development purposes
IGNORE_CACHE=false

# When true, ignore environment checks and always run the cron jobs.
# Useful for local or dev testing.
FORCE_CRON=false

# This is the flag to control if all errors will be logged to the RequestErrors table
# or only ones thrown by sequelize.
SUPPRESS_ERROR_LOGGING=false

# Import system
# ITAMS_MD_HOST=sftp.itams.ohs.acf.hhs.gov
ITAMS_MD_HOST=localhost
ITAMS_MD_PORT=22
ITAMS_MD_USERNAME=tta_ro
ITAMS_MD_PASSWORD=password

# Smartsheet integration
SMARTSHEET_ACCESS_TOKEN=secrettoken
SMARTSHEET_ENDPOINT=https://api.smartsheetgov.com/2.0/
SMARTSHEET_LOCAL=false

SFTP_EXPOSED_PORT=2200

# Needed for Mesh-Kit Client/Server
REACT_APP_WEBSOCKET_URL=http://localhost:8080/
