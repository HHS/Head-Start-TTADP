version: "3.5"
services:
  api-docs:
    image: redocly/redoc
    ports:
      - "5000:80"
    volumes:
      - "./docs/openapi/:/usr/share/nginx/html/swagger/"
    environment:
      - SPEC_URL=swagger/index.yaml
  backend:
    build:
      context: .
    command: yarn server
    user: ${CURRENT_USER:-root}
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_HOST=postgres_docker
      - REDIS_HOST=redis
    volumes:
      - ".:/app:rw"
  frontend:
    build:
      context: .
    command: yarn start
    user: ${CURRENT_USER:-root}
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - "./frontend:/app:rw"
      - "./scripts:/app/scripts"
    environment:
      - BACKEND_PROXY=http://backend:8080
  worker:
    build:
      context: .
    command: yarn server
    env_file: .env
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_HOST=postgres_docker
      - REDIS_HOST=redis
    volumes:
      - "./worker:/app:rw"
  db:
    image: postgres:12.4
    container_name: postgres_docker
    env_file: .env
    ports:
      - "6543:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
  minio:
    image: minio/minio
    env_file: .env
    ports:
      - "9000:9000"
    volumes:
      - miniodata:/data
    command: server /data
  aws-cli:
    image: amazon/aws-cli
    env_file: .env
    command: ["--endpoint-url", "$S3_ENDPOINT", "s3api", "create-bucket", "--bucket", "$S3_BUCKET"]
  clamav-server:
    image: mkodockx/docker-clamav:alpine
  clamav-rest:
    image: lokori/clamav-rest
    depends_on:
      - clamav-server
    environment:
      CLAMD_HOST: clamav-server
    ports:
      - "8081:8080"
  redis:
    image: redis:5.0.6-alpine
    command: ['redis-server', '--requirepass', '$REDIS_PASS']
    depends_on:
      - clamav-rest
    env_file: .env
volumes:
  dbdata: {}
  miniodata: {}
