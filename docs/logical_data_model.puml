@startuml
  ' avoid problems with angled crows feet
  skinparam linetype ortho
  skinparam class {
    BorderColor #336A90
    BorderThickness 2
  }
  ' Classes
  class ActivityRecipients{
 * id : integer : <generated>
 grantId : integer : REFERENCES "Grants".id
 otherEntityId : integer : REFERENCES "OtherEntities".id
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ActivityReportApprovers{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
 note : text
 status : enum
}

class ActivityReportCollaborators{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ActivityReportFiles{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * fileId : integer : REFERENCES "Files".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ActivityReportGoalFieldResponses{
 * id : integer : <generated>
 * activityReportGoalId : integer : REFERENCES "ActivityReportGoals".id
 * goalTemplateFieldPromptId : integer : REFERENCES "GoalTemplateFieldPrompts".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 response : text[]
}

class ActivityReportGoalResources{
 * id : integer : <generated>
 * activityReportGoalId : integer : REFERENCES "ActivityReportGoals".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 sourceFields : enum[]
}

enum enum_ActivityReportGoalResources_sourceFields {
 name
 resource
 timeframe
}

enum_ActivityReportGoalResources_sourceFields <|-- ActivityReportGoalResources

class ActivityReportGoals{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * goalId : integer : REFERENCES "Goals".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 closeSuspendContext : text
 closeSuspendReason : enum
 endDate : date
 isActivelyEdited : boolean : false
 isRttapa : enum
 name : text
 source : enum
 status : varchar(255)
 timeframe : text
}

class ActivityReportObjectiveFiles{
 * id : integer : <generated>
 * activityReportObjectiveId : integer : REFERENCES "ActivityReportObjectives".id
 * fileId : integer : REFERENCES "Files".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ActivityReportObjectiveResources{
 * id : integer : <generated>
 * activityReportObjectiveId : integer : REFERENCES "ActivityReportObjectives".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 sourceFields : enum[]
}

enum enum_ActivityReportObjectiveResources_sourceFields {
 resource
 title
 ttaProvided
}

enum_ActivityReportObjectiveResources_sourceFields <|-- ActivityReportObjectiveResources

class ActivityReportObjectiveTopics{
 * id : integer : <generated>
 * activityReportObjectiveId : integer : REFERENCES "ActivityReportObjectives".id
 * topicId : integer : REFERENCES "Topics".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ActivityReportObjectives{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * objectiveId : integer : REFERENCES "Objectives".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 arOrder : integer : 1
 status : varchar(255)
 suspendContext : text
 suspendReason : enum
 title : text
 ttaProvided : text
}

class ActivityReportResources{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 sourceFields : enum[]
}

enum enum_ActivityReportResources_sourceFields {
 ECLKCResourcesUsed
 additionalNotes
 context
 nonECLKCResourcesUsed
 resource
}

enum_ActivityReportResources_sourceFields <|-- ActivityReportResources

class ActivityReports{
 * id : integer : <generated>
 lastUpdatedById : integer : REFERENCES "Users".id
 userId : integer : REFERENCES "Users".id
 * regionId : integer : REFERENCES "Regions".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 * version : integer : 2
 activityRecipientType : varchar(255)
 additionalNotes : text
 approvedAt : timestamp with time zone
 calculatedStatus : enum
 context : text
 creatorRole : enum
 deliveryMethod : varchar(255)
 duration : decimal(3,1)
 ECLKCResourcesUsed : text[]
 endDate : date
 imported : jsonb
 legacyId : varchar(255)
 nonECLKCResourcesUsed : text[]
 numberOfParticipants : integer
 pageState : json
 participants : varchar(255)[]
 programTypes : varchar(255)[]
 reason : varchar(255)[]
 requester : varchar(255)
 startDate : date
 submissionStatus : enum
 submittedDate : date
 targetPopulations : varchar(255)[]
 topics : varchar(255)[]
 ttaType : varchar(255)[]
 virtualDeliveryType : varchar(255)
}

class Audiences{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "Audiences".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class CloseSuspendReasons{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "CloseSuspendReasons".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * forClose : boolean : false
 * forSuspend : boolean : false
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class CollaboratorRoles{
 * id : integer : <generated>
 * activityReportCollaboratorId : integer : REFERENCES "ActivityReportCollaborators".id
 * roleId : integer : REFERENCES "Roles".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class CollaboratorTypes{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "CollaboratorTypes".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : varchar(255)
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class EventReportPilots{
 * id : integer : <generated>
 * collaboratorIds : integer[]
 * createdAt : timestamp with time zone : CURRENT_TIMESTAMP
 * data : jsonb
 * ownerId : integer
 * regionId : integer
 * updatedAt : timestamp with time zone : CURRENT_TIMESTAMP
 imported : jsonb
 pocIds : integer[]
}

class Files{
 * id : integer : <generated>
 * createdAt : timestamp with time zone
 * fileSize : integer
 * key : varchar(255)
 * originalFileName : varchar(255)
 * status : enum
 * updatedAt : timestamp with time zone
}

class Foiaable{
 * id : integer : <generated>
 * column : text
 * createdAt : timestamp with time zone : now()
 * table : text
 * updatedAt : timestamp with time zone : now()
}

class GoalFieldResponses{
 * id : integer : <generated>
 * goalId : integer : REFERENCES "Goals".id
 * goalTemplateFieldPromptId : integer : REFERENCES "GoalTemplateFieldPrompts".id
 * createdAt : timestamp with time zone
 * onApprovedAR : boolean
 * onAR : boolean
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 response : text[]
}

class GoalResources{
 * id : integer : <generated>
 * goalId : integer : REFERENCES "Goals".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * onApprovedAR : boolean : false
 * onAR : boolean : false
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 sourceFields : enum[]
}

enum enum_GoalResources_sourceFields {
 name
 resource
 timeframe
}

enum_GoalResources_sourceFields <|-- GoalResources

class GoalTemplateFieldPrompts{
 * id : integer : <generated>
 * goalTemplateId : integer : REFERENCES "GoalTemplates".id
 * createdAt : timestamp with time zone
 * ordinal : integer
 * prompt : text
 * title : text
 * updatedAt : timestamp with time zone
 caution : text
 fieldType : enum
 hint : text
 isFoiaable : boolean : false
 isReferenced : boolean : false
 options : text[]
 validations : json
}

class GoalTemplateObjectiveTemplates{
 * id : integer : <generated>
 * goalTemplateId : integer : REFERENCES "GoalTemplates".id
 * objectiveTemplateId : integer : REFERENCES "ObjectiveTemplates".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class GoalTemplateResources{
 * id : integer : <generated>
 * goalTemplateId : integer : REFERENCES "GoalTemplates".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 sourceFields : enum[]
}

enum enum_GoalTemplateResources_sourceFields {
 name
 resource
}

enum_GoalTemplateResources_sourceFields <|-- GoalTemplateResources

class GoalTemplates{
 * id : integer : <generated>
 regionId : integer : REFERENCES "Regions".id
 * createdAt : timestamp with time zone
 * creationMethod : enum
 * hash : text
 * templateName : text
 * templateNameModifiedAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 lastUsed : timestamp with time zone
}

class Goals{
 * id : integer : <generated>
 goalTemplateId : integer : REFERENCES "GoalTemplates".id
 * grantId : integer : REFERENCES "Grants".id
 * createdAt : timestamp with time zone
 * onApprovedAR : boolean : false
 * onAR : boolean : false
 * updatedAt : timestamp with time zone
 closeSuspendContext : text
 closeSuspendReason : enum
 createdVia : enum
 deletedAt : timestamp with time zone
 endDate : date
 firstCeasedSuspendedAt : timestamp with time zone
 firstClosedAt : timestamp with time zone
 firstCompletedAt : timestamp with time zone
 firstInProgressAt : timestamp with time zone
 firstNotStartedAt : timestamp with time zone
 isFoiaable : boolean : false
 isFromSmartsheetTtaPlan : boolean
 isReferenced : boolean : false
 isRttapa : enum
 lastCeasedSuspendedAt : timestamp with time zone
 lastClosedAt : timestamp with time zone
 lastCompletedAt : timestamp with time zone
 lastInProgressAt : timestamp with time zone
 lastNotStartedAt : timestamp with time zone
 name : text
 previousStatus : text
 rtrOrder : integer : 1
 source : enum
 status : varchar(255)
 timeframe : text
}

class Grants{
 * id : integer
 oldGrantId : integer : REFERENCES "Grants".id
 regionId : integer : REFERENCES "Regions".id
 * recipientId : integer : REFERENCES "Recipients".id
 * createdAt : timestamp with time zone : now()
 * number : varchar(255)
 * updatedAt : timestamp with time zone : now()
 annualFundingMonth : varchar(255)
 cdi : boolean : false
 deleted : boolean : false
 endDate : timestamp with time zone
 granteeName : varchar(255)
 grantSpecialistEmail : varchar(255)
 grantSpecialistName : varchar(255)
 inactivationDate : timestamp with time zone
 inactivationReason : enum
 programSpecialistEmail : varchar(255)
 programSpecialistName : varchar(255)
 startDate : timestamp with time zone
 stateCode : varchar(255)
 status : varchar(255)
}

class GroupGrants{
 * id : integer : <generated>
 * grantId : integer : REFERENCES "Grants".id
 * groupId : integer : REFERENCES "Groups".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class Groups{
 * id : integer : <generated>
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone
 * name : text
 * updatedAt : timestamp with time zone
 isPublic : boolean
}

class MailerLogs{
 * id : bigint : <generated>
 * action : enum
 * activityReports : integer[]
 * createdAt : timestamp with time zone : now()
 * emailTo : varchar(255)[]
 * jobId : varchar(255)
 * subject : varchar(255)
 * updatedAt : timestamp with time zone : now()
 result : json
 success : boolean
}

class MaintenanceLogs{
 * id : bigint : <generated>
 triggeredById : bigint : REFERENCES "MaintenanceLogs".id
 * category : enum
 * createdAt : timestamp with time zone
 * data : json
 * type : enum
 * updatedAt : timestamp with time zone
 isSuccessful : boolean
}

class NationalCenters{
 * id : bigint : <generated>
 mapsTo : integer : REFERENCES "NationalCenters".id
 * createdAt : timestamp with time zone
 * name : text
 * updatedAt : timestamp with time zone
 deletedAt : timestamp with time zone
}

class NextStepResources{
 * id : integer : <generated>
 * nextStepId : integer : REFERENCES "NextSteps".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 sourceFields : enum[]
}

enum enum_NextStepResources_sourceFields {
 note
 resource
}

enum_NextStepResources_sourceFields <|-- NextStepResources

class NextSteps{
 * id : integer : <generated>
 * activityReportId : integer : REFERENCES "ActivityReports".id
 * createdAt : timestamp with time zone
 * note : text
 * noteType : enum
 * updatedAt : timestamp with time zone
 completeDate : date
}

class ObjectiveFiles{
 * id : integer : <generated>
 * fileId : integer : REFERENCES "Files".id
 * objectiveId : integer : REFERENCES "Objectives".id
 * createdAt : timestamp with time zone
 * onApprovedAR : boolean : false
 * onAR : boolean : false
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
}

class ObjectiveResources{
 * id : integer : <generated>
 * objectiveId : integer : REFERENCES "Objectives".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * onApprovedAR : boolean : false
 * onAR : boolean : false
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 sourceFields : enum[]
}

enum enum_ObjectiveResources_sourceFields {
 resource
 title
}

enum_ObjectiveResources_sourceFields <|-- ObjectiveResources

class ObjectiveTemplateFiles{
 * id : integer : <generated>
 * fileId : integer : REFERENCES "Files".id
 * objectiveTemplateId : integer : REFERENCES "ObjectiveTemplates".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
}

class ObjectiveTemplateResources{
 * id : integer : <generated>
 * objectiveTemplateId : integer : REFERENCES "ObjectiveTemplates".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 sourceFields : enum[]
}

enum enum_ObjectiveTemplateResources_sourceFields {
 resource
 title
}

enum_ObjectiveTemplateResources_sourceFields <|-- ObjectiveTemplateResources

class ObjectiveTemplateTopics{
 * id : integer : <generated>
 * objectiveTemplateId : integer : REFERENCES "ObjectiveTemplates".id
 * topicId : integer : REFERENCES "Topics".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
}

class ObjectiveTemplates{
 * id : integer : <generated>
 regionId : integer : REFERENCES "Regions".id
 * createdAt : timestamp with time zone
 * creationMethod : enum
 * hash : text
 * templateTitle : text
 * templateTitleModifiedAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 lastUsed : timestamp with time zone
}

class ObjectiveTopics{
 * id : integer : <generated>
 * objectiveId : integer : REFERENCES "Objectives".id
 * topicId : integer : REFERENCES "Topics".id
 * createdAt : timestamp with time zone
 * onApprovedAR : boolean : false
 * onAR : boolean : false
 * updatedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
}

class Objectives{
 * id : integer : <generated>
 goalId : integer : REFERENCES "Goals".id
 objectiveTemplateId : integer : REFERENCES "ObjectiveTemplates".id
 otherEntityId : integer : REFERENCES "OtherEntities".id
 * createdAt : timestamp with time zone : now()
 * onApprovedAR : boolean : false
 * onAR : boolean : false
 * updatedAt : timestamp with time zone : now()
 createdVia : enum
 deletedAt : timestamp with time zone
 firstCompleteAt : timestamp with time zone
 firstInProgressAt : timestamp with time zone
 firstNotStartedAt : timestamp with time zone
 firstSuspendedAt : timestamp with time zone
 isFoiaable : boolean : false
 isReferenced : boolean : false
 lastCompleteAt : timestamp with time zone
 lastInProgressAt : timestamp with time zone
 lastNotStartedAt : timestamp with time zone
 lastSuspendedAt : timestamp with time zone
 rtrOrder : integer : 1
 status : varchar(255)
 suspendContext : text
 suspendReason : enum
 title : text
}

class Organizers{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "Organizers".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class OtherEntities{
 * id : integer : <generated>
 * createdAt : timestamp with time zone : now()
 * name : varchar(255)
 * updatedAt : timestamp with time zone : now()
}

class Participants{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "Participants".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class Permissions{
 * id : integer : <generated>
 * regionId : integer : REFERENCES "Regions".id
 * scopeId : integer : REFERENCES "Scopes".id
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ProgramPersonnel{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "ProgramPersonnel".id
 * active : boolean
 * createdAt : timestamp with time zone : now()
 * grantId : integer
 * programId : integer
 * role : varchar(255)
 * updatedAt : timestamp with time zone : now()
 effectiveDate : timestamp with time zone
 email : varchar(255)
 firstName : varchar(255)
 lastName : varchar(255)
 prefix : varchar(255)
 suffix : varchar(255)
 title : varchar(255)
}

class Programs{
 * id : integer
 * grantId : integer : REFERENCES "Grants".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 endDate : varchar(255)
 name : varchar(255)
 programType : varchar(255)
 startDate : varchar(255)
 startYear : varchar(255)
 status : varchar(255)
}

class Reasons{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "Reasons".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class Recipients{
 * id : integer
 * createdAt : timestamp with time zone : now()
 * name : varchar(255)
 * updatedAt : timestamp with time zone : now()
 deleted : boolean : false
 recipientType : varchar(255)
 uei : varchar(255) : ''::character varying
}

class Regions{
 * id : integer : <generated>
 * name : varchar(255)
}

class ReportApprovals{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * calculatedStatus : enum
 * createdAt : timestamp with time zone : now()
 * submissionStatus : enum
 * updatedAt : timestamp with time zone : now()
 approvedAt : timestamp with time zone
 deletedAt : timestamp with time zone
 firstSubmittedAt : timestamp with time zone
 submittedAt : timestamp with time zone
}

class ReportAudiences{
 * id : bigint : <generated>
 * audienceId : integer : REFERENCES "Audiences".id
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportCollaboratorRoles{
 * id : bigint : <generated>
 * reportCollaboratorId : bigint : REFERENCES "ReportCollaborators".id
 * roleId : integer : REFERENCES "Roles".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportCollaboratorTypes{
 * id : bigint : <generated>
 * collaboratorTypeId : integer : REFERENCES "CollaboratorTypes".id
 * reportCollaboratorId : bigint : REFERENCES "ReportCollaborators".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportCollaborators{
 * id : bigint : <generated>
 statusId : integer : REFERENCES "Statuses".id
 * reportId : bigint : REFERENCES "Reports".id
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
 note : text
}

class ReportFiles{
 * id : bigint : <generated>
 * fileId : integer : REFERENCES "Files".id
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportGoalFieldResponses{
 * id : bigint : <generated>
 * goalTemplateFieldPromptId : integer : REFERENCES "GoalTemplateFieldPrompts".id
 * reportGoalId : bigint : REFERENCES "ReportGoals".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 response : text[]
}

class ReportGoalTemplateFieldPrompts{
 * id : bigint : <generated>
 * goalTemplateFieldPromptId : integer : REFERENCES "GoalTemplateFieldPrompts".id
 * reportGoalTemplateId : bigint : REFERENCES "ReportGoalTemplates".id
 * createdAt : timestamp with time zone
 * ordinal : integer
 * prompt : text
 * title : text
 * updatedAt : timestamp with time zone
 caution : text
 fieldType : enum
 hint : text
 options : text[]
 validations : json
}

class ReportGoalTemplates{
 * id : bigint : <generated>
 * goalTemplateId : integer : REFERENCES "GoalTemplates".id
 * reportId : bigint : REFERENCES "Reports".id
 * statusId : integer : REFERENCES "Statuses".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 endDate : date
 isActivelyEdited : boolean : false
 ordinal : integer
 templateName : text
 timeframe : text
}

class ReportGoals{
 * id : bigint : <generated>
 closeSuspendReasonId : integer : REFERENCES "CloseSuspendReasons".id
 * goalId : integer : REFERENCES "Goals".id
 * reportId : bigint : REFERENCES "Reports".id
 * statusId : integer : REFERENCES "Statuses".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 closeSuspendContext : text
 endDate : date
 name : text
 ordinal : integer
 timeframe : text
}

class ReportImports{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * data : jsonb
 * updatedAt : timestamp with time zone : now()
}

class ReportNationalCenters{
 * id : bigint : <generated>
!issue='column type does not match model: integer != bigint' * nationalCenterId : <color:#d54309>integer</color> : REFERENCES "NationalCenters".id
 * reportId : bigint : REFERENCES "Reports".id
 * actingAs : enum
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportNextSteps{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone
 * note : text
 * noteType : enum
 * updatedAt : timestamp with time zone
 completedDate : date
}

class ReportObjectiveFiles{
 * id : bigint : <generated>
 objectiveFileId : integer : REFERENCES "ObjectiveFiles".id
 * fileId : integer : REFERENCES "Files".id
 * reportObjectiveId : bigint : REFERENCES "ReportObjectives".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportObjectiveTemplateFiles{
 * id : bigint : <generated>
 objectiveTemplateFileId : integer : REFERENCES "ObjectiveTemplateFiles".id
 * fileId : integer : REFERENCES "Files".id
 * reportObjectiveTemplateId : bigint : REFERENCES "ReportObjectiveTemplates".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportObjectiveTemplateTopics{
 * id : bigint : <generated>
 objectiveTemplateTopicId : integer : REFERENCES "ObjectiveTemplateTopics".id
 * reportObjectiveTemplateId : bigint : REFERENCES "ReportObjectiveTemplates".id
 * topicId : integer : REFERENCES "Topics".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportObjectiveTemplateTrainers{
 * id : bigint : <generated>
!issue='column type does not match model: integer != bigint' * nationalCenterId : <color:#d54309>integer</color> : REFERENCES "NationalCenters".id
 * reportObjectiveTemplateId : bigint : REFERENCES "ReportObjectiveTemplates".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportObjectiveTemplates{
 * id : bigint : <generated>
 reportGoalTemplateId : bigint : REFERENCES "ReportGoalTemplates".id
 * objectiveTemplateId : integer : REFERENCES "ObjectiveTemplates".id
 * reportId : bigint : REFERENCES "Reports".id
 * statusId : integer : REFERENCES "Statuses".id
 * supportTypeId : integer : REFERENCES "SupportTypes".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 ordinal : integer
 templateTitle : text
 ttaProvided : text
}

class ReportObjectiveTopics{
 * id : bigint : <generated>
 objectiveTopicId : integer : REFERENCES "ObjectiveTopics".id
 * reportObjectiveId : bigint : REFERENCES "ReportObjectives".id
 * topicId : integer : REFERENCES "Topics".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportObjectiveTrainers{
 * id : bigint : <generated>
!issue='column type does not match model: integer != bigint' * nationalCenterId : <color:#d54309>integer</color> : REFERENCES "NationalCenters".id
 * reportObjectiveId : bigint : REFERENCES "ReportObjectives".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class ReportObjectives{
 * id : bigint : <generated>
 reportGoalId : bigint : REFERENCES "ReportGoals".id
 * objectiveId : integer : REFERENCES "Objectives".id
 * reportId : bigint : REFERENCES "Reports".id
 * statusId : integer : REFERENCES "Statuses".id
 * supportTypeId : integer : REFERENCES "SupportTypes".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 ordinal : integer
 title : text
 ttaProvided : text
}

class ReportPageStates{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * pageState : jsonb
 * updatedAt : timestamp with time zone : now()
}

class ReportParticipation{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 inpersonParticipantCount : integer
 participantCount : integer
 virtualParticipantCount : integer
}

class ReportParticipationParticipants{
 * id : bigint : <generated>
!issue='column type does not match model: bigint != integer' * participantId : <color:#d54309>bigint</color> : REFERENCES "Participants".id
 * reportParticipationId : bigint : REFERENCES "ReportParticipation".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportReasons{
 * id : bigint : <generated>
 * reasonId : integer : REFERENCES "Reasons".id
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportRecipients{
 * id : bigint : <generated>
 grantId : integer : REFERENCES "Grants".id
 otherEntityId : integer : REFERENCES "OtherEntities".id
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportResources{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * resourceId : integer : REFERENCES "Resources".id
 * createdAt : timestamp with time zone
 * tableId : bigint
 * tableName : text
 * updatedAt : timestamp with time zone
 columnName : text
}

class ReportTargetPopulations{
 * id : bigint : <generated>
 * reportId : bigint : REFERENCES "Reports".id
 * targetPopulationId : integer : REFERENCES "TargetPopulations".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
}

class ReportTrainingEvents{
 * id : bigint : <generated>
 * organizerId : integer : REFERENCES "Organizers".id
 * regionId : integer : REFERENCES "Regions".id
 * reportId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * eventId : text
 * trainingType : enum : 'Series'::"enum_ReportTrainingEvents_trainingType"
 * updatedAt : timestamp with time zone : now()
 name : text
 vision : text
}

class ReportTrainingSessions{
 * id : bigint : <generated>
 * regionId : integer : REFERENCES "Regions".id
 * reportId : bigint : REFERENCES "Reports".id
 * reportTrainingEventId : bigint : REFERENCES "Reports".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 name : text
}

class Reports{
 * id : bigint : <generated>
 * reportTypeId : integer : REFERENCES "ValidFor".id
 * statusId : integer : REFERENCES "Statuses".id
 * createdAt : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 context : text
 endDate : date
 startDate : date
}

class RequestErrors{
 * id : bigint : <generated>
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 method : varchar(255)
 operation : varchar(255)
 requestBody : json
 responseBody : json
 responseCode : varchar(255)
 uri : varchar(255)
}

class Resources{
 * id : integer : <generated>
 * createdAt : timestamp with time zone
 * domain : text
 * updatedAt : timestamp with time zone
 * url : text
 metadata : jsonb
 metadataUpdatedAt : timestamp with time zone
 title : text
}

class RoleTopics{
 * id : integer : <generated>
 * roleId : integer : REFERENCES "Roles".id
 * topicId : integer : REFERENCES "Topics".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class Roles{
 * id : integer : <generated>
 * createdAt : timestamp with time zone
 * isSpecialist : boolean
 * name : varchar(255)
 * updatedAt : timestamp with time zone
 deletedAt : timestamp with time zone
 fullName : varchar(255)
 mapsTo : integer
}

class RttapaPilots{
 * id : integer : <generated>
 * recipientId : integer : REFERENCES "Recipients".id
 * regionId : integer : REFERENCES "Regions".id
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone
 * reviewDate : timestamp with time zone
 * updatedAt : timestamp with time zone
 goals : jsonb
 notes : text
}

class Scopes{
 * id : integer : <generated>
 * createdAt : timestamp with time zone : now()
 * description : varchar(255)
 * name : varchar(255)
 * updatedAt : timestamp with time zone : now()
}

class SessionReportPilotFiles{
 * id : integer : <generated>
 * fileId : integer : REFERENCES "Files".id
 * sessionReportPilotId : integer : REFERENCES "SessionReportPilots".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class SessionReportPilots{
 * id : integer : <generated>
 * eventId : integer : REFERENCES "EventReportPilots".id
 * createdAt : timestamp with time zone : CURRENT_TIMESTAMP
 * data : jsonb
 * updatedAt : timestamp with time zone : CURRENT_TIMESTAMP
}

class SiteAlerts{
 * id : integer : <generated>
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone
 * endDate : timestamp with time zone
 * message : text
 * size : enum : 'standard'::"enum_SiteAlerts_size"
 * startDate : timestamp with time zone
 * title : text
 * updatedAt : timestamp with time zone
 status : enum
 variant : enum
}

class Statuses{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "Statuses".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * isTerminal : boolean
 * name : text
 * ordinal : integer
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class SupportTypes{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "SupportTypes".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class TargetPopulations{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "TargetPopulations".id
 * validForId : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * name : varchar(255)
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class Topics{
 * id : integer : <generated>
 * createdAt : timestamp with time zone
 * name : varchar(255)
 * updatedAt : timestamp with time zone
 deletedAt : timestamp with time zone
 mapsTo : integer
}

class UserRoles{
 * id : integer : <generated>
 * roleId : integer : REFERENCES "Roles".id
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
}

class UserSettingOverrides{
 * id : integer : <generated>
 * userId : integer : REFERENCES "Users".id
 * userSettingId : integer : REFERENCES "UserSettings".id
 * createdAt : timestamp with time zone
 * updatedAt : timestamp with time zone
 * value : jsonb
}

class UserSettings{
 * id : integer : <generated>
 * class : varchar(255)
 * createdAt : timestamp with time zone
 * default : jsonb
 * key : varchar(255)
 * updatedAt : timestamp with time zone
}

class UserValidationStatus{
 * id : integer : <generated>
 * userId : integer : REFERENCES "Users".id
 * createdAt : timestamp with time zone
 * token : varchar(255)
 * type : varchar(255)
 * updatedAt : timestamp with time zone
 validatedAt : timestamp with time zone
}

class Users{
 * id : integer : <generated>
 homeRegionId : integer : REFERENCES "Regions".id
 * createdAt : timestamp with time zone : now()
 * hsesUsername : varchar(255)
 * lastLogin : timestamp with time zone : now()
 * updatedAt : timestamp with time zone : now()
 email : varchar(255)
 flags : enum[] : ARRAY[]::"enum_Users_flags"[]
 hsesAuthorities : varchar(255)[]
 hsesUserId : varchar(255)
 name : varchar(255)
 phoneNumber : varchar(255)
}

enum enum_Users_flags {
 anv_statistics
 goal_source
 regional_goal_dashboard
 resources_dashboard
 rttapa_form
 training_reports
}

enum_Users_flags <|-- Users

class ValidFor{
 * id : integer : <generated>
 mapsTo : integer : REFERENCES "ValidFor".id
 * createdAt : timestamp with time zone : now()
 * isReport : boolean : false
 * name : text
 * updatedAt : timestamp with time zone : now()
 deletedAt : timestamp with time zone
}

class ZADescriptor{
 * id : integer : <generated>
 * descriptor : text
}

class ZAFilter{
 * id : integer : <generated>
 * columnName : varchar(255)
 tableName : varchar(255)
}

class ZALActivityRecipients{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportApprovers{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportCollaborators{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportGoalFieldResponses{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportGoalResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportGoals{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportObjectiveFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportObjectiveResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportObjectiveTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportObjectives{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReportResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALActivityReports{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALAudiences{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALCloseSuspendReasons{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALCollaboratorRoles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALCollaboratorTypes{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALDDL{
 * id : bigint : <generated>
 * ddl_timestamp : timestamp with time zone
 * ddl_txid : uuid
 command_tag : varchar(255)
 ddl_by : integer
 descriptor_id : integer
 object_identity : varchar(255)
 object_type : varchar(255)
 schema_name : varchar(255)
 session_sig : text
}

class ZALEventReportPilots{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALFoiaable{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoalFieldResponses{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoalResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoalTemplateFieldPrompts{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoalTemplateObjectiveTemplates{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoalTemplateResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoalTemplates{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGoals{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGrants{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGroupGrants{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALGroups{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALMailerLogs{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALMaintenanceLogs{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALNationalCenters{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALNextStepResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALNextSteps{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveTemplateFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveTemplateResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveTemplateTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveTemplates{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectiveTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALObjectives{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALOrganizers{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALOtherEntities{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALParticipants{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALPermissions{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALProgramPersonnel{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALPrograms{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReasons{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALRecipients{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALRegions{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportApprovals{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportAudiences{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportCollaboratorRoles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportCollaboratorTypes{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportCollaborators{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportGoalFieldResponses{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportGoalTemplateFieldPrompts{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportGoalTemplates{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportGoals{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportImports{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportNationalCenters{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportNextSteps{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveTemplateFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveTemplateTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveTemplateTrainers{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveTemplates{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectiveTrainers{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportObjectives{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportPageStates{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportParticipation{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportParticipationParticipants{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportReasons{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportRecipients{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportTargetPopulations{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportTrainingEvents{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReportTrainingSessions{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALReports{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALResources{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALRoleTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALRoles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALRttapaPilots{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALScopes{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALSessionReportPilotFiles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALSessionReportPilots{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALSiteAlerts{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALStatuses{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALSupportTypes{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALTargetPopulations{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALTopics{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALUserRoles{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALUserSettingOverrides{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALUserSettings{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALUserValidationStatus{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALUsers{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALValidFor{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALZADescriptor{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

class ZALZAFilter{
 * id : bigint : <generated>
 * data_id : bigint
 * dml_as : bigint
 * dml_by : bigint
 * dml_timestamp : timestamp with time zone
 * dml_txid : uuid
 * dml_type : enum
 descriptor_id : integer
 new_row_data : jsonb
 old_row_data : jsonb
 session_sig : text
}

!issue='model missing for table'
class interim_reports #pink;line:red;line.bold;text:red {
 context : text
 createdAt : timestamp with time zone
 data : jsonb
 endDate : date
 pilot_record_id : integer
 reports_id : integer
 reportTypeId : integer
 startDate : date
 statusId : integer
 updatedAt : timestamp with time zone
}


' Associations


ActivityReportCollaborators "1" --[#black,dashed,thickness=2]--{  "n" CollaboratorRoles : collaboratorRoles, activityReportCollaborator
ActivityReportGoals "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportGoalFieldResponses : activityReportGoal, activityReportGoalFieldResponses
ActivityReportGoals "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportGoalResources : activityReportGoal, activityReportGoalResources
ActivityReportObjectives "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectiveFiles : activityReportObjective, activityReportObjectiveFiles
ActivityReportObjectives "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectiveResources : activityReportObjective, activityReportObjectiveResources
ActivityReportObjectives "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectiveTopics : activityReportObjective, activityReportObjectiveTopics
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityRecipients : activityReport, activityRecipients
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportApprovers : activityReport, approvers
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportCollaborators : activityReport, activityReportCollaborators
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportFiles : activityReport, reportFiles
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportGoals : activityReport, activityReportGoals
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectives : activityReport, activityReportObjectives
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportResources : activityReport, activityReportResources
ActivityReports "1" --[#black,dashed,thickness=2]--{  "n" NextSteps : specialistNextSteps, recipientNextSteps, activityReport
Audiences "1" --[#black,dashed,thickness=2]--{  "n" Audiences : audience, audiences
Audiences "1" --[#black,dashed,thickness=2]--{  "n" ReportAudiences : reportAudiences, audience
CloseSuspendReasons "1" --[#black,dashed,thickness=2]--{  "n" CloseSuspendReasons : closeSuspendReason, closeSuspendReasons
CloseSuspendReasons "1" --[#black,dashed,thickness=2]--{  "n" ReportGoals : reportGoals, closeSuspendReason
CollaboratorTypes "1" --[#black,dashed,thickness=2]--{  "n" CollaboratorTypes : collaboratorType, collaboratorTypes
CollaboratorTypes "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaboratorTypes : reportCollaboratorTypes, collaboratorType
EventReportPilots "1" --[#black,dashed,thickness=2]--{  "n" SessionReportPilots : sessionReports, event
Files "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportFiles : file, activityReportFiles
Files "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectiveFiles : file, activityReportObjectiveFiles
Files "1" --[#black,dashed,thickness=2]--{  "n" ReportFiles : reportFiles, file
Files "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveFiles : reportObjectiveFiles, file
Files "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateFiles : reportObjectiveTemplateFiles, file
Files "1" --[#black,dashed,thickness=2]--{  "n" SessionReportPilotFiles : sessionFiles, file
GoalTemplateFieldPrompts "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportGoalFieldResponses : prompt, reportResponses
GoalTemplateFieldPrompts "1" --[#black,dashed,thickness=2]--{  "n" GoalFieldResponses : prompt, responses
GoalTemplateFieldPrompts "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalFieldResponses : reportGoalFieldResponses, goalTemplateFieldPrompt
GoalTemplateFieldPrompts "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalTemplateFieldPrompts : reportGoalTemplateFieldPrompts, goalTemplateFieldPrompt
GoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" GoalTemplateFieldPrompts : goalTemplate, prompts
GoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" GoalTemplateObjectiveTemplates : goalTemplate, goalTemplateObjectiveTemplates
GoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" GoalTemplateResources : goalTemplate, goalTemplateResources
GoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" Goals : goals, goalTemplate
GoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalTemplates : reportGoalTemplates, goalTemplate
Goals "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportGoals : goal, activityReportGoals
Goals "1" --[#black,dashed,thickness=2]--{  "n" GoalFieldResponses : goal, responses
Goals "1" --[#black,dashed,thickness=2]--{  "n" GoalResources : goal, goalResources
Goals "1" --[#black,dashed,thickness=2]--{  "n" Objectives : objectives, goal
Goals "1" --[#black,dashed,thickness=2]--{  "n" ReportGoals : reportGoals, goal
Grants "1" --[#black,dashed,thickness=2]--{  "n" ActivityRecipients : grant, activityRecipients
Grants "1" --[#black,dashed,thickness=2]--{  "n" Goals : grant, goals
Grants "1" --[#black,dashed,thickness=2]--{  "n" Grants : oldGrants, grant
Grants "1" --[#black,dashed,thickness=2]--{  "n" GroupGrants : groupGrants, grant
Grants "1" --[#black,dashed,thickness=2]--{  "n" ProgramPersonnel : programPersonnel, grant
Grants "1" --[#black,dashed,thickness=2]--{  "n" Programs : programs, grant
Grants "1" --[#black,dashed,thickness=2]--{  "n" ReportRecipients : reportRecipients, grant
Groups "1" --[#black,dashed,thickness=2]--{  "n" GroupGrants : group, groupGrants
MaintenanceLogs "1" --[#black,dashed,thickness=2]--{  "n" MaintenanceLogs : triggeredBy, triggered
NationalCenters "1" --[#black,dashed,thickness=2]--{  "n" NationalCenters : nationalCenter, nationalCenters
NationalCenters "1" --[#black,dashed,thickness=2]--{  "n" ReportNationalCenters : reportNationalCenters, nationalCenter
NationalCenters "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateTrainers : reportObjectiveTemplateTrainers, nationalCenter
NationalCenters "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTrainers : reportObjectiveTrainers, nationalCenter
NextSteps "1" --[#black,dashed,thickness=2]--{  "n" NextStepResources : nextStep, nextStepResources
ObjectiveFiles "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveFiles : reportObjectiveFiles, objectiveFile
ObjectiveTemplateFiles "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateFiles : reportObjectiveTemplateFiles, objectiveTemplateFile
ObjectiveTemplateTopics "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateTopics : reportObjectiveTemplateTopics, objectiveTemplateTopic
ObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" GoalTemplateObjectiveTemplates : objectiveTemplate, goalTemplateObjectiveTemplates
ObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTemplateFiles : objectiveTemplate, objectiveTemplateFiles
ObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTemplateResources : objectiveTemplate, objectiveTemplateResources
ObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTemplateTopics : objectiveTemplate, objectiveTemplateTopics
ObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" Objectives : objectives, objectiveTemplate
ObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplates : reportObjectiveTemplates, objectiveTemplate
ObjectiveTopics "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTopics : reportObjectiveTopics, objectiveTopic
Objectives "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectives : objective, activityReportObjectives
Objectives "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveFiles : objective, objectiveFiles
Objectives "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveResources : objective, objectiveResources
Objectives "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTopics : objective, objectiveTopics
Objectives "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectives : reportObjectives, objective
Organizers "1" --[#black,dashed,thickness=2]--{  "n" Organizers : organizer, organizers
Organizers "1" --[#black,dashed,thickness=2]--{  "n" ReportTrainingEvents : reportTrainingEvents, organizer
OtherEntities "1" --[#black,dashed,thickness=2]--{  "n" ActivityRecipients : otherEntity, activityRecipients
OtherEntities "1" --[#black,dashed,thickness=2]--{  "n" Objectives : otherEntity, objectives
OtherEntities "1" --[#black,dashed,thickness=2]--{  "n" ReportRecipients : reportRecipients, otherEntity
Participants "1" --[#black,dashed,thickness=2]--{  "n" Participants : participant, participants
Participants "1" --[#black,dashed,thickness=2]--{  "n" ReportParticipationParticipants : reportParticipationParticipants, participant
ProgramPersonnel "1" --[#black,dashed,thickness=2]--{  "n" ProgramPersonnel : mapsFromProgramPersonnel, mapsToProgramPersonnel
Programs "1" --[#black,dashed,thickness=2]--{  "n" ProgramPersonnel : program, programPersonnel
Reasons "1" --[#black,dashed,thickness=2]--{  "n" Reasons : reason, reasons
Reasons "1" --[#black,dashed,thickness=2]--{  "n" ReportReasons : reportReasons, reason
Recipients "1" --[#black,dashed,thickness=2]--{  "n" Grants : recipient, grants
Recipients "1" --[#black,dashed,thickness=2]--{  "n" RttapaPilots : rttapaPilots, recipient
Regions "1" --[#black,dashed,thickness=2]--{  "n" ActivityReports : region, activityReports
Regions "1" --[#black,dashed,thickness=2]--{  "n" GoalTemplates : region, goalTemplates
Regions "1" --[#black,dashed,thickness=2]--{  "n" Grants : region, grants
Regions "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTemplates : region, objectiveTemplates
Regions "1" --[#black,dashed,thickness=2]--{  "n" Permissions : region, permissions
Regions "1" --[#black,dashed,thickness=2]--{  "n" ReportTrainingEvents : reportTrainingEvents, region
Regions "1" --[#black,dashed,thickness=2]--{  "n" ReportTrainingSessions : reportTrainingSessions, region
Regions "1" --[#black,dashed,thickness=2]--{  "n" RttapaPilots : rttapaPilots, region
Regions "1" --[#black,dashed,thickness=2]--{  "n" Users : users, homeRegion
ReportCollaborators "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaboratorRoles : reportCollaborator, reportCollaboratorRoles
ReportCollaborators "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaboratorTypes : reportCollaborator, reportCollaboratorTypes
ReportGoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalTemplateFieldPrompts : reportGoalTemplate, reportGoalTemplateFieldPrompts
ReportGoalTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplates : reportObjectiveTemplates, reportGoalTemplate
ReportGoals "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalFieldResponses : reportGoal, reportGoalFieldResponses
ReportGoals "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectives : reportObjectives, reportGoal
ReportObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateFiles : reportObjectiveTemplate, reportObjectiveTemplateFiles
ReportObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateTopics : reportObjectiveTemplate, reportObjectiveTemplateTopics
ReportObjectiveTemplates "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateTrainers : reportObjectiveTemplate, reportObjectiveTemplateTrainers
ReportObjectives "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveFiles : reportObjective, reportObjectiveFiles
ReportObjectives "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTopics : reportObjective, reportObjectiveTopics
ReportObjectives "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTrainers : reportObjective, reportObjectiveTrainers
ReportParticipation "1" --[#black,dashed,thickness=2]--{  "n" ReportParticipationParticipants : reportParticipationParticipants, reportParticipation
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportApprovals : report, reportApprovals
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportAudiences : report, reportAudiences
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaborators : report, reportAsEditor, reportAsOwner, reportAsInstantiator, reportAsApprover, reportAsPoc, reportCollaborators, reportCollaboratorAsEditors, reportCollaboratorAsOwners, reportCollaboratorAsInstantiators, reportCollaboratorAsApprovers, reportCollaboratorAsPocs
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportFiles : report, reportFiles
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalTemplates : report, reportGoalTemplates
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportGoals : report, reportGoals
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportImports : report, reportImports
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportNationalCenters : report, reportNationalCenters
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportNextSteps : report, reportAsSpecialist, reportAsRecipient, reportNextSteps, reportNextStepAsSpecialists, reportNextStepAsRecipients
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplates : report, reportObjectiveTemplates
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectives : report, reportObjectives
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportPageStates : report, reportPageStates
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportParticipation : report, reportParticipations
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportReasons : report, reportReasons
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportRecipients : report, reportRecipients
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportResources : report, reportResources
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportTargetPopulations : report, reportTargetPopulations
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportTrainingEvents : report, reportTrainingEvents
Reports "1" --[#black,dashed,thickness=2]--{  "n" ReportTrainingSessions : report, reportTrainingEventForReportTrainingEvent, reportTrainingSessions, reportTrainingSessionForReportTrainingEvents
Resources "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportGoalResources : resource, activityReportGoalResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectiveResources : resource, activityReportObjectiveResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportResources : resource, activityReportResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" GoalResources : resource, goalResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" GoalTemplateResources : resource, goalTemplateResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" NextStepResources : resource, nextStepResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveResources : resource, objectiveResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTemplateResources : resource, objectiveTemplateResources
Resources "1" --[#black,dashed,thickness=2]--{  "n" ReportResources : resource, reportResources
Roles "1" --[#black,dashed,thickness=2]--{  "n" CollaboratorRoles : role, collaboratorRoles
Roles "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaboratorRoles : role, reportCollaboratorRoles
Roles "1" --[#black,dashed,thickness=2]--{  "n" RoleTopics : role, roleTopics
Roles "1" --[#black,dashed,thickness=2]--{  "n" Roles : mapsToRole, mapsFromRoles
Roles "1" --[#black,dashed,thickness=2]--{  "n" UserRoles : userRoles, role
Scopes "1" --[#black,dashed,thickness=2]--{  "n" Permissions : scope, permissions
SessionReportPilots "1" --[#black,dashed,thickness=2]--{  "n" SessionReportPilotFiles : sessionReport, sessionFiles
Statuses "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaborators : status, statusAsEditor, statusAsOwner, statusAsInstantiator, statusAsApprover, statusAsPoc, reportCollaborators, reportCollaboratorAsEditors, reportCollaboratorAsOwners, reportCollaboratorAsInstantiators, reportCollaboratorAsApprovers, reportCollaboratorAsPocs
Statuses "1" --[#black,dashed,thickness=2]--{  "n" ReportGoalTemplates : status, reportGoalTemplates
Statuses "1" --[#black,dashed,thickness=2]--{  "n" ReportGoals : status, reportGoals
Statuses "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplates : status, reportObjectiveTemplates
Statuses "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectives : status, reportObjectives
Statuses "1" --[#black,dashed,thickness=2]--{  "n" Reports : status, reports
Statuses "1" --[#black,dashed,thickness=2]--{  "n" Statuses : status, statuses
SupportTypes "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplates : supportType, reportObjectiveTemplates
SupportTypes "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectives : supportType, reportObjectives
SupportTypes "1" --[#black,dashed,thickness=2]--{  "n" SupportTypes : supportType, supportTypes
TargetPopulations "1" --[#black,dashed,thickness=2]--{  "n" ReportTargetPopulations : targetPopulation, reportTargetPopulations
TargetPopulations "1" --[#black,dashed,thickness=2]--{  "n" TargetPopulations : targetPopulation, targetPopulations
Topics "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportObjectiveTopics : topic, activityReportObjectiveTopics
Topics "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTemplateTopics : topic, objectiveTemplateTopics
Topics "1" --[#black,dashed,thickness=2]--{  "n" ObjectiveTopics : topic, objectiveTopics
Topics "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTemplateTopics : topic, reportObjectiveTemplateTopics
Topics "1" --[#black,dashed,thickness=2]--{  "n" ReportObjectiveTopics : topic, reportObjectiveTopics
Topics "1" --[#black,dashed,thickness=2]--{  "n" RoleTopics : topic, roleTopics
Topics "1" --[#black,dashed,thickness=2]--{  "n" Topics : mapsToTopic, mapsFromTopics
UserSettings "1" --[#black,dashed,thickness=2]--{  "n" UserSettingOverrides : setting, userSettingOverrides
Users "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportApprovers : user, reportApprovers
Users "1" --[#black,dashed,thickness=2]--{  "n" ActivityReportCollaborators : user, activityReportCollaborators
Users "1" --[#black,dashed,thickness=2]--{  "n" ActivityReports : author, lastUpdatedBy, activityReports
Users "1" --[#black,dashed,thickness=2]--{  "n" Groups : user, groups
Users "1" --[#black,dashed,thickness=2]--{  "n" Permissions : user, permissions
Users "1" --[#black,dashed,thickness=2]--{  "n" ReportCollaborators : user, userAsEditor, userAsOwner, userAsInstantiator, userAsApprover, userAsPoc, reportCollaborators, reportCollaboratorAsEditors, reportCollaboratorAsOwners, reportCollaboratorAsInstantiators, reportCollaboratorAsApprovers, reportCollaboratorAsPocs
Users "1" --[#black,dashed,thickness=2]--{  "n" RttapaPilots : user, rttapaPilots
Users "1" --[#black,dashed,thickness=2]--{  "n" SiteAlerts : creator, siteAlerts
Users "1" --[#black,dashed,thickness=2]--{  "n" UserRoles : user, userRoles
Users "1" --[#black,dashed,thickness=2]--{  "n" UserSettingOverrides : user, userSettingOverrides
Users "1" --[#black,dashed,thickness=2]--{  "n" UserValidationStatus : user, validationStatus
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" Audiences : validFor, audiences
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" CloseSuspendReasons : validFor, closeSuspendReasons
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" CollaboratorTypes : validFor, collaboratorTypes
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" Organizers : validFor, organizers
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" Participants : validFor, participants
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" Reasons : validFor, reasons
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" Reports : reportType, reports
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" Statuses : validFor, statuses
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" SupportTypes : validFor, supportTypes
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" TargetPopulations : validFor, targetPopulations
ValidFor "1" --[#black,dashed,thickness=2]--{  "n" ValidFor : mapsToValidFor, mapsFromValidFor

ActivityReportCollaborators "n" }--[#black,dotted,thickness=2]--{ "n" Roles : roles, collaborators
ActivityReportGoals "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, activityReportGoals
ActivityReportObjectives "n" }--[#black,dotted,thickness=2]--{ "n" Files : files, activityReportObjectives
ActivityReportObjectives "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, activityReportObjectives
ActivityReportObjectives "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topics, activityReportObjectives
ActivityReports "n" }--[#black,dotted,thickness=2]--{ "n" Files : files, activityReports
ActivityReports "n" }--[#black,dotted,thickness=2]--{ "n" Goals : goals, activityReports
ActivityReports "n" }--[#black,dotted,thickness=2]--{ "n" Grants : grants, activityReports
ActivityReports "n" }--[#black,dotted,thickness=2]--{ "n" Objectives : objectivesWithoutGoals, objectivesWithGoals, objectives, activityReports
ActivityReports "n" }--[#black,dotted,thickness=2]--{ "n" OtherEntities : otherEntities, activityReports
ActivityReports "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, activityReports
Audiences "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportAudiences, audienceForReportAudiences
Audiences "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForAudiences, audienceForAudiences
CloseSuspendReasons "n" }--[#black,dotted,thickness=2]--{ "n" Goals : goalForReportGoals, closeSuspendReasonForReportGoals
CloseSuspendReasons "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportGoals, closeSuspendReasonForReportGoals
CloseSuspendReasons "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportGoals, closeSuspendReasonForReportGoals
CloseSuspendReasons "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForCloseSuspendReasons, closeSuspendReasonForCloseSuspendReasons
CollaboratorTypes "n" }--[#black,dotted,thickness=2]--{ "n" ReportCollaborators : reportCollaboratorForReportCollaboratorTypes, collaboratorTypeForReportCollaboratorTypes
CollaboratorTypes "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForCollaboratorTypes, collaboratorTypeForCollaboratorTypes
Files "n" }--[#black,dotted,thickness=2]--{ "n" ObjectiveFiles : objectiveFiles, objectiveFileForReportObjectiveFiles, file, fileForReportObjectiveFiles
Files "n" }--[#black,dotted,thickness=2]--{ "n" ObjectiveTemplateFiles : objectiveTemplateFiles, objectiveTemplateFileForReportObjectiveTemplateFiles, file, fileForReportObjectiveTemplateFiles
Files "n" }--[#black,dotted,thickness=2]--{ "n" ObjectiveTemplates : objectiveTemplates, files
Files "n" }--[#black,dotted,thickness=2]--{ "n" Objectives : objectives, files
Files "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectiveTemplates : reportObjectiveTemplateForReportObjectiveTemplateFiles, fileForReportObjectiveTemplateFiles
Files "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectives : reportObjectiveForReportObjectiveFiles, fileForReportObjectiveFiles
Files "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportFiles, fileForReportFiles
Files "n" }--[#black,dotted,thickness=2]--{ "n" SessionReportPilots : sessions, files
GoalTemplateFieldPrompts "n" }--[#black,dotted,thickness=2]--{ "n" Goals : goals, prompts
GoalTemplateFieldPrompts "n" }--[#black,dotted,thickness=2]--{ "n" ReportGoalTemplates : reportGoalTemplateForReportGoalTemplateFieldPrompts, goalTemplateFieldPromptForReportGoalTemplateFieldPrompts
GoalTemplateFieldPrompts "n" }--[#black,dotted,thickness=2]--{ "n" ReportGoals : reportGoalForReportGoalFieldResponses, goalTemplateFieldPromptForReportGoalFieldResponses
GoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" ObjectiveTemplates : goalTemplates
GoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportGoalTemplates, goalTemplateForReportGoalTemplates
GoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, goalTemplates
GoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportGoalTemplates, goalTemplateForReportGoalTemplates
Goals "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportGoals, goalForReportGoals
Goals "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, goals
Goals "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportGoals, goalForReportGoals
Grants "n" }--[#black,dotted,thickness=2]--{ "n" Groups : groups, grants
Grants "n" }--[#black,dotted,thickness=2]--{ "n" OtherEntities : otherEntityForReportRecipients, grantForReportRecipients
Grants "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportRecipients, grantForReportRecipients
NationalCenters "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectiveTemplates : reportObjectiveTemplateForReportObjectiveTemplateTrainers, nationalCenterForReportObjectiveTemplateTrainers
NationalCenters "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectives : reportObjectiveForReportObjectiveTrainers, nationalCenterForReportObjectiveTrainers
NationalCenters "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportNationalCenters, nationalCenterForReportNationalCenters
NextSteps "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, nextSteps
ObjectiveFiles "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectives : reportObjectiveForReportObjectiveFiles, objectiveFileForReportObjectiveFiles
ObjectiveTemplateFiles "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectiveTemplates : reportObjectiveTemplateForReportObjectiveTemplateFiles, objectiveTemplateFileForReportObjectiveTemplateFiles
ObjectiveTemplateTopics "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectiveTemplates : reportObjectiveTemplateForReportObjectiveTemplateTopics, objectiveTemplateTopicForReportObjectiveTemplateTopics
ObjectiveTemplateTopics "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topicForReportObjectiveTemplateTopics, objectiveTemplateTopicForReportObjectiveTemplateTopics
ObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" ReportGoalTemplates : reportGoalTemplateForReportObjectiveTemplates, objectiveTemplateForReportObjectiveTemplates
ObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportObjectiveTemplates, objectiveTemplateForReportObjectiveTemplates
ObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, objectiveTemplates
ObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportObjectiveTemplates, objectiveTemplateForReportObjectiveTemplates
ObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" SupportTypes : supportTypeForReportObjectiveTemplates, objectiveTemplateForReportObjectiveTemplates
ObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topics, objectiveTemplates
ObjectiveTopics "n" }--[#black,dotted,thickness=2]--{ "n" ReportObjectives : reportObjectiveForReportObjectiveTopics, objectiveTopicForReportObjectiveTopics
ObjectiveTopics "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topicForReportObjectiveTopics, objectiveTopicForReportObjectiveTopics
Objectives "n" }--[#black,dotted,thickness=2]--{ "n" ReportGoals : reportGoalForReportObjectives, objectiveForReportObjectives
Objectives "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportObjectives, objectiveForReportObjectives
Objectives "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resources, objectives
Objectives "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportObjectives, objectiveForReportObjectives
Objectives "n" }--[#black,dotted,thickness=2]--{ "n" SupportTypes : supportTypeForReportObjectives, objectiveForReportObjectives
Objectives "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topics, objectives
Organizers "n" }--[#black,dotted,thickness=2]--{ "n" Regions : regionForReportTrainingEvents, organizerForReportTrainingEvents
Organizers "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportTrainingEvents, organizerForReportTrainingEvents
Organizers "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForOrganizers, organizerForOrganizers
OtherEntities "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportRecipients, otherEntityForReportRecipients
Participants "n" }--[#black,dotted,thickness=2]--{ "n" ReportParticipation : reportParticipationForReportParticipationParticipants, participantForReportParticipationParticipants
Participants "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForParticipants, participantForParticipants
Reasons "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportReasons, reasonForReportReasons
Reasons "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForReasons, reasonForReasons
Regions "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportTrainingEvents, reportForReportTrainingSessions, reportTrainingEventForReportTrainingEventForReportTrainingSessions, regionForReportTrainingEvents, regionForReportTrainingSessions, regionForReportTrainingEventForReportTrainingSessions
Regions "n" }--[#black,dotted,thickness=2]--{ "n" Scopes : scopes, regions
ReportCollaborators "n" }--[#black,dotted,thickness=2]--{ "n" Roles : roleForReportCollaboratorRoles, reportCollaboratorForReportCollaboratorRoles
ReportGoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportObjectiveTemplates, reportGoalTemplateForReportObjectiveTemplates
ReportGoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportObjectiveTemplates, reportGoalTemplateForReportObjectiveTemplates
ReportGoalTemplates "n" }--[#black,dotted,thickness=2]--{ "n" SupportTypes : supportTypeForReportObjectiveTemplates, reportGoalTemplateForReportObjectiveTemplates
ReportGoals "n" }--[#black,dotted,thickness=2]--{ "n" Reports : reportForReportObjectives, reportGoalForReportObjectives
ReportGoals "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportObjectives, reportGoalForReportObjectives
ReportGoals "n" }--[#black,dotted,thickness=2]--{ "n" SupportTypes : supportTypeForReportObjectives, reportGoalForReportObjectives
ReportObjectiveTemplates "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topicForReportObjectiveTemplateTopics, reportObjectiveTemplateForReportObjectiveTemplateTopics
ReportObjectives "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topicForReportObjectiveTopics, reportObjectiveForReportObjectiveTopics
Reports "n" }--[#black,dotted,thickness=2]--{ "n" Resources : resourceForReportResources, reportForReportResources
Reports "n" }--[#black,dotted,thickness=2]--{ "n" Statuses : statusForReportCollaborators, statusAsEditorForReportCollaborators, statusAsOwnerForReportCollaborators, statusAsInstantiatorForReportCollaborators, statusAsApproverForReportCollaborators, statusAsPocForReportCollaborators, statusForReportGoals, statusForReportGoalTemplates, statusForReportObjectives, statusForReportObjectiveTemplates, reportForReportCollaborators, reportAsEditorForReportCollaborators, reportAsOwnerForReportCollaborators, reportAsInstantiatorForReportCollaborators, reportAsApproverForReportCollaborators, reportAsPocForReportCollaborators, reportForReportGoals, reportForReportGoalTemplates, reportForReportObjectives, reportForReportObjectiveTemplates
Reports "n" }--[#black,dotted,thickness=2]--{ "n" SupportTypes : supportTypeForReportObjectives, supportTypeForReportObjectiveTemplates, reportForReportObjectives, reportForReportObjectiveTemplates
Reports "n" }--[#black,dotted,thickness=2]--{ "n" TargetPopulations : targetPopulationForReportTargetPopulations, reportForReportTargetPopulations
Reports "n" }--[#black,dotted,thickness=2]--{ "n" Users : userForReportCollaborators, userAsEditorForReportCollaborators, userAsOwnerForReportCollaborators, userAsInstantiatorForReportCollaborators, userAsApproverForReportCollaborators, userAsPocForReportCollaborators, reportForReportCollaborators, reportAsEditorForReportCollaborators, reportAsOwnerForReportCollaborators, reportAsInstantiatorForReportCollaborators, reportAsApproverForReportCollaborators, reportAsPocForReportCollaborators
Roles "n" }--[#black,dotted,thickness=2]--{ "n" Topics : topics, roles
Roles "n" }--[#black,dotted,thickness=2]--{ "n" Users : users, roles
Scopes "n" }--[#black,dotted,thickness=2]--{ "n" Users : users, scopes
Statuses "n" }--[#black,dotted,thickness=2]--{ "n" SupportTypes : supportTypeForReportObjectives, supportTypeForReportObjectiveTemplates, statusForReportObjectives, statusForReportObjectiveTemplates
Statuses "n" }--[#black,dotted,thickness=2]--{ "n" Users : userForReportCollaborators, userAsEditorForReportCollaborators, userAsOwnerForReportCollaborators, userAsInstantiatorForReportCollaborators, userAsApproverForReportCollaborators, userAsPocForReportCollaborators, statusForReportCollaborators, statusAsEditorForReportCollaborators, statusAsOwnerForReportCollaborators, statusAsInstantiatorForReportCollaborators, statusAsApproverForReportCollaborators, statusAsPocForReportCollaborators
Statuses "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForStatuses, reportTypeForReports, statusForStatuses, statusForReports
SupportTypes "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForSupportTypes, supportTypeForSupportTypes
TargetPopulations "n" }--[#black,dotted,thickness=2]--{ "n" ValidFor : validForForTargetPopulations, targetPopulationForTargetPopulations

@enduml
