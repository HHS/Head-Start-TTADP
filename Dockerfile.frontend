FROM node:18.18.2-alpine as base
ENV TURBO_TELEMETRY_DISABLED=1
RUN apk add --no-cache libc6-compat dumb-init
RUN apk update
RUN yarn global add turbo node-gyp

FROM base AS prune
ENV TURBO_TOKEN=
ENV TURBO_TEAM=
RUN apk update
# Set working directory
WORKDIR /app
COPY frontend/ frontend/
COPY package.json .  
COPY yarn.lock . 
COPY turbo.json . 
COPY .eslintrc.js . 
RUN turbo prune --docker @repo/frontend

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
ENV TURBO_TELEMETRY_DISABLED=1
RUN apk add --no-cache libc6-compat 
RUN apk update
WORKDIR /app
 
# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --link --from=prune /app/out/json/ .
COPY --link --from=prune /app/turbo.json .
COPY --link --from=prune /app/out/yarn.lock ./yarn.lock
RUN --mount=type=cache,target=/root/.yarn \
    YARN_CACHE_FOLDER=/root/.yarn \
    yarn install

FROM base as builder 
ENV TURBO_TOKEN=
ENV TURBO_TEAM=
WORKDIR /app
RUN apk add --no-cache libc6-compat 
RUN apk update
# Build the project
COPY --link --from=prune /app/out/full/ .
COPY --link --from=prune /app/turbo.json .
COPY --link --from=installer /app/node_modules /app/node_modules
RUN turbo run build --filter=@repo/frontend
 
FROM base AS frontend
WORKDIR /app
ENV DISABLE_ESLINT_PLUGIN=true
COPY --from=base --chown=node:node  /usr/bin/dumb-init /usr/bin/dumb-init
USER node
 # Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --link --from=builder --chown=node:node /app/frontend /app/
COPY --link --from=builder --chown=node:node /app/node_modules /app/node_modules
# ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["yarn", "react-scripts", "start"]
