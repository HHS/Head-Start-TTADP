version: "3.7"
services:
  backend:
    build:
      context: .
      # dockerfile: ./Dockerfile.dev
      dockerfile: ./Dockerfile.backend
      cache_from: 
        - node:18.18.2  # Using the base image as a cache source
        - node:18.18.2-slim
        - node:18.18.2-alpine
        - head-start-ttadp-backend:latest
      target: backend
    user: ${CURRENT_USER:-root}
    # command: ["yarn", "serve"]
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      NPM_CONFIG_LOGLEVEL: verbose
      # On an M1 mac, puppeteer install fails with the message:
      # "The chromium binary is not available for arm64"
      #
      # The below instructs the container to skip downloading chromium and use the host's binary instead.
      # If you're not on an M1 mac, you can comment this out or just leave it, the undefined exports will have no effect.
      # I installed chromium with brew: `brew install chromium --no-quarantine`
      #
      # In ~/.zshrc (in my case) add:
      # export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      # export PUPPETEER_EXECUTABLE_PATH=`which chromium`

    volumes:
      - "./backend/config/:/app/config/:rw"
      - "./backend/package.json:/app/package.json:ro"
      - "./backend/src/:/app/src/:rw"
      - "./backend/tsconfig.json:/app/tsconfig.json:ro"
      - "./packages/:/packages/:rw"
      - "./scripts:/app/scripts:rw"
      - "./tests/:/app/tests/:rw"
      - ".env:/app/.env:ro"
      - ".sequelizerc:/app/.sequelizerc:rw"

  frontend:
    build:
      context: .
      dockerfile: ./Dockerfile.frontend
      cache_from: 
        - node:18.18.2  # Using the base image as a cache source
        - node:18.18.2-slim
        - node:18.18.2-alpine
        - head-start-ttadp-frontend:latest
      target: frontend
    env_file: .env
    user: ${CURRENT_USER:-root}
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - "./frontend/public:/app/public:rw"
      - "./frontend/src:/app/src:rw"
      - "./frontend/scripts:/app/scripts:rw"
      - "./packages:/app/packages:ro"
      - ".env:/app/.env:ro"
  worker:
    build:
      context: .
      dockerfile: ./Dockerfile.backend
      cache_from: 
        - node:18.18.2  # Using the base image as a cache source
        - node:18.18.2-slim
        - node:18.18.2-alpine
        - head-start-ttadp-worker:latest
      target: backend
    command: yarn worker
    env_file: .env
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - "./backend/src/:/app/src/:rw"
      - "./tests/:/app/tests/:rw"
      - "./backend/package.json:/app/package.json:rw"
      - "./backend/config/config.js:/app/config/config.js:rw"
      - ".env:/app/.env:ro"
      - "./.log/node_trace.1.log:/app/node_trace.1.log:ro"

