{
  "name": "head-start-ttadp",
  "version": "1.0.0",
  "description": "Office of Head Start Training & Technical Assistance Data Platform\r =============================================",
  "main": "index.js",
  "engines": {
    "node": "18.18.2"
  },
  "packageManager": "yarn@1.22.19",
  "private": true,
  "workspaces": [
    "frontend",
    "backend",
    "packages/*",
    "cucumber",
    "docs/*"
  ],
  "scripts": {
    "build": "turbo run build",
    "changeReportStatus:local": "./node_modules/.bin/babel-node ./src/tools/changeReportStatusCLI.js",
    "changeReportStatus": "node ./build/server/src/tools/changeReportStatusCLI.js",
    "clean:coverage": "rm -rf coverage reports frontend/coverage frontend/reports frontend/build",
    "clean": "turbo run clean && rm -rf node_modules",
    "client": "yarn --cwd frontend start",
    "coverage:backend": "./bin/build-coverage-report",
    "create:goals:local": "./node_modules/.bin/babel-node ./src/tools/goalPilotCLI.js",
    "create:goals": "node ./build/server/src/tools/goalPilotCLI.js",
    "createAwsElasticSearchIndexes:local": "./node_modules/.bin/babel-node ./src/tools/createAwsElasticSearchIndexesCli.js",
    "createAwsElasticSearchIndexes": "node ./build/server/src/tools/createAwsElasticSearchIndexesCli.js",
    "cucumber:ci": "cross-env TTA_SMART_HUB_URI=http://localhost:3000 yarn cucumber",
    "cucumber": "./node_modules/.bin/cucumber-js --publish ./cucumber/features/*.feature -f json:./reports/cucumber_report.json && node ./cucumber/index.js",
    "db:bootstrap:admin:local": "./node_modules/.bin/babel-node ./src/tools/bootstrapAdminCLI.js",
    "db:bootstrap:admin": "node ./build/server/src/tools/bootstrapAdminCLI.js",
    "db:migrate:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub node_modules/.bin/sequelize db:migrate  && yarn ldm:ci",
    "db:migrate:create": "npx sequelize-cli migration:generate --name",
    "db:migrate:prod": "node_modules/.bin/sequelize db:migrate --options-path .production.sequelizerc",
    "db:migrate:undo:prod:all": "node_modules/.bin/sequelize db:migrate:undo:all --options-path .production.sequelizerc",
    "db:migrate:undo:prod:last": "node_modules/.bin/sequelize db:migrate:undo --options-path .production.sequelizerc",
    "db:migrate:undo": "node_modules/.bin/sequelize db:migrate:undo  && yarn ldm",
    "db:migrate": "node_modules/.bin/sequelize db:migrate && yarn ldm",
    "db:seed:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub node_modules/.bin/sequelize db:seed:all",
    "db:seed:prod": "node_modules/.bin/sequelize db:seed:all --options-path .production.sequelizerc",
    "db:seed:undo:prod": "node_modules/.bin/sequelize db:seed:undo:all --options-path .production.sequelizerc",
    "db:seed:undo": "node_modules/.bin/sequelize db:seed:undo:all",
    "db:seed": "node_modules/.bin/sequelize db:seed:all",
    "db:validation": "node ./build/server/src/tools/dataValidationCLI.js",
    "deps:local": "yarn global add node-gyp && yarn install && yarn --cwd frontend install",
    "deps": "yarn global add node-gyp && yarn install --frozen-lockfile && yarn --cwd frontend install --frozen-lockfile",
    "dev": "turbo run dev",
    "docker:coverage:backend": "docker compose run --rm backend chmod 744 ./bin/build-coverage-report && ./bin/build-coverage-report",
    "docker:db:migrate:undo": "docker compose run --rm backend node_modules/.bin/sequelize db:migrate:undo",
    "docker:db:migrate": "docker compose run --rm backend node_modules/.bin/sequelize db:migrate && yarn docker:ldm",
    "docker:db:seed:undo": "docker compose run --rm backend yarn db:seed:undo",
    "docker:db:seed": "docker compose run --rm backend yarn db:seed",
    "docker:dbs:start": "docker compose -f 'docker compose.yml' up",
    "docker:dbs:stop": "docker compose -f 'docker compose.yml' down",
    "docker:deps": "docker compose run --rm backend yarn global add node-gyp && docker compose run --rm backend yarn install && docker compose run --rm frontend yarn global add node-gyp && docker compose run --rm frontend yarn install && docker compose run --rm testingonly yarn global add node-gyp && docker compose run --rm testingonly yarn install",
    "docker:ldm": "docker compose run --rm backend yarn ldm",
    "docker:lint:fix": "docker compose run --rm backend yarn lint:fix && docker compose run --rm frontend yarn lint:fix",
    "docker:lint": "docker compose run --rm backend yarn lint:ci && docker compose run --rm frontend yarn lint:ci",
    "docker:makecolors": "docker compose run --rm frontend yarn makecolors",
    "docker:reset": "./bin/reset-all",
    "docker:shell:backend": "docker compose run --rm backend /bin/bash",
    "docker:shell:frontend": "docker compose run --rm frontend /bin/bash",
    "docker:start:debug": "docker compose --compatibility -f docker compose.yml -f docker compose.debug.yml up",
    "docker:start": "docker compose up",
    "docker:stop": "docker compose down",
    "docker:test:be": "docker compose run --rm backend yarn test",
    "docker:test": "./bin/run-tests",
    "docker:yarn:be": "docker compose run --rm backend yarn",
    "docker:yarn:fe": "docker compose run --rm frontend  yarn",
    "docker:yarn": "docker compose run yarn",
    "docs:serve": "npx redoc-cli serve -p 5003 docs/openapi/index.yaml",
    "e2e:api": "./node_modules/.bin/playwright test --config=tests/api/playwright.config.js",
    "e2e:ci": "cross-env TTA_SMART_HUB_URI=http://localhost:3000 yarn e2e",
    "e2e:utils": "./node_modules/.bin/playwright test --config=tests/utilsTests/playwright.config.js",
    "e2e": "./node_modules/.bin/playwright test --config=tests/e2e/playwright.config.js",
    "import:goals:local": "./node_modules/.bin/babel-node ./src/tools/importTTAPlanGoals.js",
    "import:goals": "node ./build/server/src/tools/importTTAPlanGoals.js",
    "import:hses:local": "./node_modules/.bin/babel-node ./src/tools/importGrantRecipientsCLI.js --skipdownload",
    "import:hses": "node ./build/server/src/tools/importGrantRecipientsCLI.js",
    "import:reports:local": "./node_modules/.bin/babel-node ./src/tools/importSSActivityReports.js",
    "import:reports": "node ./build/server/src/tools/importSSActivityReports.js",
    "ldm:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub tsx ./src/tools/logicalDataModelCLI.ts",
    "ldm": "tsx ./src/tools/logicalDataModelCLI.ts",
    "lint:all": "yarn lint:ci && yarn --cwd frontend lint:ci",
    "lint:ci": "eslint -f eslint-formatter-multiple src",
    "lint:fix:all": "yarn lint:fix && yarn --cwd frontend lint:fix",
    "lint:fix:single": "eslint --fix",
    "lint:fix": "eslint --fix src",
    "lint": "eslint src",
    "makecolors": "node ./src/makecolors.js",
    "migrate:create": "npx sequelize-cli migration:generate --name",
    "populateLegacyResourceTitles:local": "./node_modules/.bin/babel-node ./src/tools/populateLegacyResourceTitlesCli.js",
    "populateLegacyResourceTitles": "node ./build/server/src/tools/populateLegacyResourceTitlesCli.js",
    "postinstall": "manypkg check",
    "processData:local": "./node_modules/.bin/babel-node ./src/tools/processDataCLI.js",
    "publish:common": "yarn --cwd ./packages/common publish",
    "reconcile:legacy:local": "./node_modules/.bin/babel-node ./src/tools/reconcileLegacyReports.js",
    "reconcile:legacy": "node ./build/server/src/tools/reconcileLegacyReports.js",
    "restoreTopics:local": "./node_modules/.bin/babel-node ./src/tools/restoreTopicsCLI.js",
    "restoreTopics": "node ./build/server/src/tools/restoreTopicsCLI.js",
    "server:debug": "nodemon --inspect=0.0.0.0:9229 src/index.js --exec babel-node",
    "server": "tsx watch --trace-warnings src/index.ts",
    "start:ci": "cross-env BYPASS_SOCKETS=true POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub TTA_SMART_HUB_URI=http://localhost:3000 concurrently \"yarn start:web\" \"yarn client\" \"yarn start:testingonly\"",
    "start:local": "concurrently \"yarn server\" \"yarn client\" \"yarn worker\"",
    "start:testingonly": "tsx watch ./src/testingOnly.js",
    "start:web": "node ./build/server/src/index.js",
    "start:worker": "node ./build/server/src/worker.js",
    "test:all": "yarn test:ci && yarn --cwd frontend test:ci",
    "test:ci": "./bin/test-backend-ci",
    "test": "yarn build && jest build/server/src --runInBand",
    "worker": "tsx watch --trace-warnings src/worker.ts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adhocteam/Head-Start-TTADP.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/adhocteam/Head-Start-TTADP/issues"
  },
  "homepage": "https://github.com/adhocteam/Head-Start-TTADP#readme",
  "Dependencies": {
    "turbo": "^1.12.3",
    "@manypkg/cli": "latest"
  },
  "dependencies": {
    "@manypkg/cli": "^0.21.2",
    "@vercel/style-guide": "^4.0.2",
    "eslint-config-turbo": "^1.10.12",
    "prettier": "^3.1.1",
    "turbo": "^1.12.3"
  }
}
