{
  "name": "head-start-ttadp",
  "version": "1.0.0",
  "description": "Office of Head Start Training & Technical Assistance Data Platform\r =============================================",
  "main": "index.js",
  "engines": {
    "node": "18.20.6"
  },
  "scripts": {
    "build": "tsc -p src",
    "deps:local": "yarn global add node-gyp && yarn install && yarn --cwd frontend install",
    "deps": "yarn global add node-gyp && yarn install --frozen-lockfile && yarn --cwd frontend install --frozen-lockfile",
    "start:local": "concurrently \"yarn server\" \"yarn client\" \"yarn worker\"",
    "start:ci": "cross-env BYPASS_SOCKETS=true POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub TTA_SMART_HUB_URI=http://localhost:3000 concurrently \"yarn start:web\" \"yarn client\" \"yarn start:testingonly\"",
    "start:web": "node ./build/server/src/index.js",
    "start:worker": "node ./build/server/src/worker.js",
    "start:testingonly": "tsx watch ./src/testingOnly.js",
    "server": "tsx watch src/index.ts",
    "worker": "tsx watch src/worker.ts",
    "server:debug": "nodemon --inspect=0.0.0.0:9229 src/index.js --exec babel-node",
    "client": "yarn --cwd frontend start",
    "test": "yarn build && jest build/server/src --runInBand",
    "test:ci": "./bin/test-backend-ci",
    "test:all": "yarn test:ci && yarn --cwd frontend test:ci",
    "lint": "eslint src",
    "lint:ci": "eslint -f eslint-formatter-multiple src",
    "lint:all": "yarn lint:ci && yarn --cwd frontend lint:ci",
    "lint:fix": "eslint --fix src",
    "lint:fix:single": "eslint --fix",
    "lint:fix:all": "yarn lint:fix && yarn --cwd frontend lint:fix",
    "clean": "rm -rf coverage reports frontend/coverage frontend/reports frontend/build",
    "docs:serve": "npx redoc-cli serve -p 5003 docs/openapi/index.yaml",
    "cucumber": "./node_modules/.bin/cucumber-js --publish ./cucumber/features/*.feature -f json:./reports/cucumber_report.json && node ./cucumber/index.js",
    "cucumber:ci": "cross-env TTA_SMART_HUB_URI=http://localhost:3000 yarn cucumber",
    "e2e": "./node_modules/.bin/playwright test --config=tests/e2e/playwright.config.js",
    "e2e:api": "./node_modules/.bin/playwright test --config=tests/api/playwright.config.js",
    "e2e:utils": "./node_modules/.bin/playwright test --config=tests/utilsTests/playwright.config.js",
    "e2e:ci": "cross-env TTA_SMART_HUB_URI=http://localhost:3000 yarn e2e",
    "migrate:create": "npx sequelize-cli migration:generate --name",
    "db:bootstrap:admin:local": "./node_modules/.bin/babel-node ./src/tools/bootstrapAdminCLI.js",
    "db:bootstrap:admin": "node ./build/server/src/tools/bootstrapAdminCLI.js",
    "db:validation": "node ./build/server/src/tools/dataValidationCLI.js",
    "db:migrate": "node_modules/.bin/sequelize db:migrate && yarn ldm",
    "db:migrate:create": "npx sequelize-cli migration:generate --name",
    "db:migrate:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub node_modules/.bin/sequelize db:migrate  && yarn ldm:ci",
    "db:migrate:prod": "node_modules/.bin/sequelize db:migrate --options-path .production.sequelizerc",
    "db:migrate:undo": "node_modules/.bin/sequelize db:migrate:undo  && yarn ldm",
    "db:migrate:undo:prod:last": "node_modules/.bin/sequelize db:migrate:undo --options-path .production.sequelizerc",
    "db:migrate:undo:prod:all": "node_modules/.bin/sequelize db:migrate:undo:all --options-path .production.sequelizerc",
    "db:seed": "node_modules/.bin/sequelize db:seed:all",
    "db:seed:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub node_modules/.bin/sequelize db:seed:all",
    "db:seed:prod": "node_modules/.bin/sequelize db:seed:all --options-path .production.sequelizerc",
    "db:seed:undo": "node_modules/.bin/sequelize db:seed:undo:all",
    "db:seed:undo:prod": "node_modules/.bin/sequelize db:seed:undo:all --options-path .production.sequelizerc",
    "docker:clear": "docker images | grep head-start | awk '{print $3}' | while read x; do docker image rm -f $x; done",
    "docker:deps": "docker compose --profile minimal_required_postgres --profile minimal_required_redis run --rm backend yarn install && docker compose --profile minimal_required_postgres --profile minimal_required_redis run --rm frontend yarn install && docker compose --profile minimal_required_postgres --profile minimal_required_redis run --rm worker yarn install",
    "docker:reset": "./bin/reset-all",
    "docker:start": "docker compose --profile minimal_required_node --profile minimal_required_postgres --profile minimal_required_redis --profile minimal_required_python up",
    "docker:start:native": "docker compose --profile full_stack --profile minimal_required_postgres --profile minimal_required_redis --profile minimal_required_python up & sleep 1 && docker compose -f docker-compose.yml stop db",
    "docker:start:full": "docker compose --profile full_stack --profile full_stack_zap  --profile minimal_required_node --profile minimal_required_postgres --profile minimal_required_redis --profile minimal_required_python up",
    "docker:start:debug": "docker compose --compatibility -f docker-compose.yml -f docker-compose.debug.yml up",
    "docker:stop": "docker compose --profile full_stack --profile full_stack_zap --profile minimal_required_node --profile minimal_required_postgres --profile minimal_required_redis --profile minimal_required_python down",
    "docker:dbs:start": "docker compose -f 'docker-compose.yml' --profile full_stack --profile minimal_required_redis --profile minimal_required_python up",
    "docker:dbs:stop": "yarn docker:stop",
    "docker:test": "./bin/run-tests",
    "docker:test:be": "yarn docker:yarn:be test",
    "docker:lint": "yarn docker:yarn:be lint:ci && yarn docker:yarn:fe lint:ci",
    "docker:lint:fix": "yarn docker:yarn:be lint:fix && yarn docker:yarn:fe lint:fix",
    "docker:shell:frontend": "docker compose run --rm frontend /bin/bash",
    "docker:shell:backend": "yarn docker:yarn:be /bin/bash",
    "docker:db:migrate": "yarn docker:yarn:be db:migrate && yarn docker:ldm",
    "docker:db:migrate:undo": "yarn docker:yarn:be db:migrate:undo",
    "docker:db:seed": "yarn docker:yarn:be db:seed",
    "docker:db:seed:undo": "yarn docker:yarn:be db:seed:undo",
    "docker:import:system": "yarn docker:yarn:be import:system",
    "docker:ldm": "yarn docker:yarn:be ldm",
    "docker:makecolors": "yarn docker:yarn:fe makecolors",
    "docker:yarn": "docker compose run yarn",
    "docker:yarn:fe": "docker compose run --rm frontend yarn",
    "docker:yarn:be": "docker compose --profile minimal_required_postgres --profile minimal_required_redis run --rm backend yarn",
    "import:reports:local": "./node_modules/.bin/babel-node ./src/tools/importSSActivityReports.js",
    "import:reports": "node ./build/server/src/tools/importSSActivityReports.js",
    "import:goals:local": "./node_modules/.bin/babel-node ./src/tools/importTTAPlanGoals.js",
    "create:goals": "node ./build/server/src/tools/goalPilotCLI.js",
    "create:goals:local": "./node_modules/.bin/babel-node ./src/tools/goalPilotCLI.js",
    "import:goals": "node ./build/server/src/tools/importTTAPlanGoals.js",
    "import:hses:local": "./node_modules/.bin/babel-node ./src/tools/importGrantRecipientsCLI.js --skipdownload",
    "import:hses": "node ./build/server/src/tools/importGrantRecipientsCLI.js",
    "import:system": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub tsx src/tools/importSystemCLI.ts",
    "reconcile:legacy": "node ./build/server/src/tools/reconcileLegacyReports.js",
    "reconcile:legacy:local": "./node_modules/.bin/babel-node ./src/tools/reconcileLegacyReports.js",
    "processData:local": "tsx ./src/tools/processDataCLI.js",
    "ldm:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub tsx ./src/tools/logicalDataModelCLI.ts",
    "ldm": "tsx ./src/tools/logicalDataModelCLI.ts",
    "changeReportStatus": "node ./build/server/src/tools/changeReportStatusCLI.js",
    "changeReportStatus:local": "./node_modules/.bin/babel-node ./src/tools/changeReportStatusCLI.js",
    "makecolors": "node ./src/makecolors.js",
    "restoreTopics": "node ./build/server/src/tools/restoreTopicsCLI.js",
    "restoreTopics:local": "./node_modules/.bin/babel-node ./src/tools/restoreTopicsCLI.js",
    "coverage:backend": "./bin/build-coverage-report",
    "docker:coverage:backend": "docker compose --profile minimal_required_postgres --profile minimal_required_redis run --rm backend chmod 744 ./bin/build-coverage-report && ./bin/build-coverage-report",
    "populateLegacyResourceTitles": "node ./build/server/src/tools/populateLegacyResourceTitlesCli.js",
    "populateLegacyResourceTitles:local": "./node_modules/.bin/babel-node ./src/tools/populateLegacyResourceTitlesCli.js",
    "updateCompletedEventReportPilots": "node ./build/server/src/tools/updateCompletedEventReportPilotsCLI.js",
    "updateCompletedEventReportPilots:local": "./node_modules/.bin/babel-node ./src/tools/updateCompletedEventReportPilotsCLI.js",
    "publish:common": "yarn --cwd ./packages/common publish",
    "merge-coverage": "node ./src/tools/merge-coverage.js",
    "check-coverage": "node -r esm ./src/tools/check-coverage.js --fail-on-uncovered=true",
    "createMonitoringGoalsCLI": "node ./build/server/src/tools/createMonitoringGoalsCLI.js",
    "createMonitoringGoalsCLI:local": "tsx ./src/tools/createMonitoringGoalsCLI.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adhocteam/Head-Start-TTADP.git"
  },
  "resolutions": {
    "axe-core": "4.6.3",
    "@axe-core/webdriverjs": "4.6.0",
    "ansi-regex": "^5.0.1",
    "body-parser": "^1.20.3",
    "colors": "1.4.0",
    "follow-redirects": "^1.15.6",
    "json-pointer": "0.6.2",
    "marked": "^4.0.10",
    "minimist": "^1.2.7",
    "moment": "^2.29.2",
    "nanoid": "^3.2.0",
    "node-fetch": "^2.6.7",
    "protobufjs": "^7.2.4",
    "got": "^11.8.5",
    "undici": "^5.10.0",
    "selenium-webdriver": "4.3.0",
    "json5": "^2.2.3",
    "luxon": "^1.23.1",
    "qs": "^6.9.7",
    "cookie": "^0.7.0",
    "cookiejar": "^2.1.4",
    "http-cache-semantics": "^4.1.1",
    "path-to-regexp": "^0.1.12",
    "serve-static": "^1.16.0",
    "send": "^0.19.0",
    "xml2js": "^0.5.0",
    "semver": "^7.5.3",
    "tough-cookie": "^4.1.3",
    "micromatch": "^4.0.7",
    "axios": "^1.7.4",
    "fast-xml-parser": "^4.4.1",
    "ws": "^8.17.1"
  },
  "eslintConfig": {
    "extends": [
      "airbnb-base",
      "airbnb-typescript/base",
      "plugin:jest/recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 2020,
      "project": "./src/tsconfig.json"
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "ignorePatterns": [
      "node_modules/*",
      "playwright.config.js",
      "tests/*",
      "packages/*",
      "frontend/public/*"
    ],
    "rules": {
      "linebreak-style": 0,
      "@typescript-eslint/no-var-requires": 0,
      "@typescript-eslint/no-unused-vars": 0,
      "@typescript-eslint/no-empty-function": 0,
      "@typescript-eslint/ban-ts-comment": 0
    }
  },
  "eslint-formatter-multiple": {
    "formatters": [
      {
        "name": "stylish",
        "output": "console"
      },
      {
        "name": "junit",
        "output": "file",
        "path": "reports/lint.xml"
      }
    ]
  },
  "jest": {
    "testPathIgnorePatterns": [
      "<rootDir>/frontend/",
      "<rootDir>node_modules/",
      "<rootDir>/build/",
      "<rootDir>/src/makecolors.js",
      "<rootDir>/src/newrelic.js",
      "<rootDir>/src/testUtils.js",
      "<rootDir>/src/logger.js",
      "<rootDir>/src/*/coverage/",
      "<rootDir>/packages/",
      "<rootDir>/src/coverage/",
      "<rootDir>/src/index.js",
      "<rootDir>/src/worker.ts",
      "<rootDir>/src/app.js",
      "<rootDir>/src/tools/*CLI.js",
      "<rootDir>/src/tools/*Cli.js",
      "<rootDir>/src/tools/populateLegacyResourceTitlesCLI.js",
      "<rootDir>/src/tools/importTTAPlanGoals.js"
    ],
    "testTimeout": 30000,
    "coveragePathIgnorePatterns": [
      "<rootDir>/src/middleware/newRelicMiddleware.js",
      "<rootDir>/frontend/",
      "<rootDir>node_modules",
      "<rootDir>/build/",
      "<rootDir>/packages/",
      "<rootDir>/src/makecolors.js",
      "<rootDir>/src/newrelic.js",
      "<rootDir>/src/testUtils.js",
      "<rootDir>/src/logger.js",
      "<rootDir>/src/*/coverage/",
      "<rootDir>/src/coverage/",
      "<rootDir>/src/index.ts",
      "<rootDir>/src/worker.ts",
      "<rootDir>/src/app.js",
      "<rootDir>/src/tools/*CLI.js",
      "<rootDir>/src/tools/*Cli.js",
      "<rootDir>/src/tools/populateLegacyResourceTitlesCli.js",
      "<rootDir>/src/tools/importTTAPlanGoals.js"
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "clover"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 90,
        "functions": 88,
        "branches": 80,
        "lines": 90
      }
    },
    "setupFiles": [
      "./src/setupTest.js",
      "./src/envParser.js"
    ]
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/adhocteam/Head-Start-TTADP/issues"
  },
  "homepage": "https://github.com/adhocteam/Head-Start-TTADP#readme",
  "nodemonConfig": {
    "ignore": [
      "./reports/",
      "./cucumber/",
      "./frontend/",
      "./tests/",
      "./playwright/",
      "./playwright-report/",
      "./test-results/",
      "./playwright.config.js"
    ]
  },
  "devDependencies": {
    "@axe-core/cli": "4.6.0",
    "@axe-core/playwright": "^4.6.0",
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.6",
    "@babel/node": "^7.10.5",
    "@babel/plugin-transform-runtime": "^7.11.0",
    "@babel/preset-env": "^7.11.5",
    "@babel/preset-typescript": "^7.18.6",
    "@cucumber/cucumber": "^7.0.0",
    "@hapi/joi": "^17.1.1",
    "@playwright/test": "^1.28.0",
    "@types/hapi__joi": "^17.1.14",
    "@types/jest": "^29.5.12",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.0.0",
    "concurrently": "^7.0.0",
    "cross-env": "^7.0.2",
    "depcheck": "^1.2.0",
    "eslint": "^7.20.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-formatter-multiple": "^1.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jest": "^25.3.4",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-react": "^7.20.6",
    "esm": "^3.2.25",
    "ioredis-mock": "^8.9.0",
    "istanbul-lib-coverage": "^3.2.2",
    "istanbul-lib-report": "^3.0.1",
    "jest": "26.6.0",
    "jest-cli": "26.4.2",
    "jest-junit": "^12.0.0",
    "markdown-table": "^3.0.4",
    "mock-fs": "^5.4.1",
    "nodemon": "^2.0.4",
    "playwright": "^1.46.0",
    "puppeteer": "^13.1.1",
    "puppeteer-select": "^1.0.3",
    "redoc-cli": "^0.13.2",
    "selenium-webdriver": "4.3.0",
    "sinon": "^15.0.0",
    "supertest": "^6.1.3",
    "tsx": "^3.12.2",
    "typescript": "4.7.4",
    "umzug": "^3.2.1"
  },
  "dependencies": {
    "@babel/runtime": "^7.12.1",
    "@faker-js/faker": "^6.0.0",
    "@opensearch-project/opensearch": "^1.1.0",
    "@ttahub/common": "2.2.8",
    "adm-zip": "^0.5.1",
    "aws-sdk": "^2.826.0",
    "aws4": "^1.11.0",
    "axios": "^0.28.0",
    "bull": "^4.2.0",
    "chardet": "^2.0.0",
    "cheerio": "^1.0.0-rc.10",
    "client-oauth2": "^4.3.3",
    "cls-hooked": "^4.2.2",
    "cookie-session": "^2.0.0",
    "cron": "^1.8.2",
    "csv-parse": "^4.14.1",
    "csv-stringify": "^5.6.2",
    "cucumber-html-reporter": "^5.2.0",
    "deepmerge": "^4.3.1",
    "dompurify": "^3.2.4",
    "dot-wild": "^3.0.1",
    "dotenv": "^16.4.1",
    "email-templates": "^8.0.4",
    "express": "^4.20.0",
    "express-http-context": "^1.2.4",
    "express-unless": "^1.0.0",
    "express-winston": "^4.0.5",
    "file-type": "^16.5.4",
    "form-data": "^4.0.0",
    "he": "^1.2.0",
    "helmet": "^5.0.1",
    "html-to-text": "^8.1.0",
    "http-codes": "^1.0.0",
    "ioredis": "^5.3.2",
    "jsdom": "^24.0.0",
    "jsonwebtoken": "^9.0.0",
    "lodash": "^4.17.20",
    "md5": "^2.3.0",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.45",
    "multiparty": "^4.2.2",
    "mz": "^2.7.0",
    "newrelic": "^11.6.0",
    "nodemailer": "^6.9.9",
    "pg": "^8.3.3",
    "plantuml-encoder": "^1.4.0",
    "pug": "^3.0.3",
    "redis": "^4.0.6",
    "sax": "^1.3.0",
    "sequelize": "^6.29.0",
    "sequelize-cli": "^6.2.0",
    "simple-git": "3.19.1",
    "smartsheet": "^4.0.2",
    "ssh2": "^1.15.0",
    "throng": "^5.0.0",
    "through2": "^4.0.2",
    "unzipper": "^0.10.14",
    "url-join": "^4.0.1",
    "uuid": "^8.3.2",
    "validator": "^13.7.0",
    "wait-for-expect": "^3.0.2",
    "winston": "^3.3.3",
    "ws": "^8.17.1",
    "xml2js": "^0.6.2",
    "yargs": "^17.7.2",
    "yayson": "^2.1.0"
  }
}