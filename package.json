{
  "name": "head-start-ttadp",
  "version": "1.0.0",
  "description": "Office of Head Start Training & Technical Assistance Data Platform\r =============================================",
  "main": "index.js",
  "engines": {
    "node": "16.13.1"
  },
  "scripts": {
    "axe:ci": "axe --exit --show-errors --load-delay 1000 `cat axe-urls` --dir ./reports/",
    "build": "./node_modules/.bin/babel src -d ./build/server && ./node_modules/.bin/babel config -d build/config",
    "deps:local": "yarn install && yarn --cwd frontend install",
    "deps": "yarn install --frozen-lockfile && yarn --cwd frontend install --frozen-lockfile",
    "start:local": "concurrently \"yarn server\" \"yarn client\" \"yarn worker\"",
    "start:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub TTA_SMART_HUB_URI=http://localhost:3000 concurrently \"yarn start:web\" \"yarn client\"",
    "start:web": "node ./build/server/index.js",
    "start:worker": "node ./build/server/worker.js",
    "server": "nodemon src/index.js --exec babel-node",
    "worker": "nodemon src/worker.js --exec babel-node",
    "server:debug": "nodemon --inspect=0.0.0.0:9229 src/index.js --exec babel-node",
    "client": "yarn --cwd frontend start",
    "test": "jest src --runInBand",
    "test:ci": "cross-env JEST_JUNIT_OUTPUT_DIR=reports JEST_JUNIT_OUTPUT_NAME=unit.xml POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub CURRENT_USER_ID=5 CI=true jest src --coverage --reporters=default --reporters=jest-junit --runInBand",
    "test:all": "yarn test:ci && yarn --cwd frontend test:ci",
    "lint": "eslint src",
    "lint:ci": "eslint -f eslint-formatter-multiple src",
    "lint:all": "yarn lint:ci && yarn --cwd frontend lint:ci",
    "lint:fix": "eslint --fix src",
    "lint:fix:single": "eslint --fix",
    "lint:fix:all": "yarn lint:fix && yarn --cwd frontend lint:fix",
    "clean": "rm -rf coverage reports frontend/coverage frontend/reports frontend/build",
    "docs:serve": "npx redoc-cli serve -p 5000 docs/openapi/index.yaml",
    "cucumber": "./node_modules/.bin/cucumber-js --publish ./cucumber/features/*.feature -f json:./reports/cucumber_report.json && node ./cucumber/index.js",
    "cucumber:ci": "cross-env TTA_SMART_HUB_URI=http://localhost:3000 yarn cucumber",
    "migrate:create": "npx sequelize-cli migration:generate --name",
    "db:bootstrap:admin:local": "./node_modules/.bin/babel-node ./src/tools/bootstrapAdminCLI.js",
    "db:bootstrap:admin": "node ./build/server/tools/bootstrapAdminCLI.js",
    "db:validation": "node ./build/server/tools/dataValidationCLI.js",
    "db:migrate": "node_modules/.bin/sequelize db:migrate",
    "db:migrate:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub node_modules/.bin/sequelize db:migrate",
    "db:migrate:prod": "node_modules/.bin/sequelize db:migrate --options-path .production.sequelizerc",
    "db:migrate:undo": "node_modules/.bin/sequelize db:migrate:undo",
    "db:migrate:undo:prod:last": "node_modules/.bin/sequelize db:migrate:undo --options-path .production.sequelizerc",
    "db:migrate:undo:prod:all": "node_modules/.bin/sequelize db:migrate:undo:all --options-path .production.sequelizerc",
    "db:seed": "node_modules/.bin/sequelize db:seed:all",
    "db:seed:ci": "cross-env POSTGRES_USERNAME=postgres POSTGRES_DB=ttasmarthub node_modules/.bin/sequelize db:seed:all",
    "db:seed:prod": "node_modules/.bin/sequelize db:seed:all --options-path .production.sequelizerc",
    "db:seed:undo": "node_modules/.bin/sequelize db:seed:undo:all",
    "db:seed:undo:prod": "node_modules/.bin/sequelize db:seed:undo:all --options-path .production.sequelizerc",
    "docker:deps": "docker-compose run --rm backend yarn install && docker-compose run --rm frontend yarn install",
    "docker:reset": "./bin/reset-all",
    "docker:start": "docker-compose up",
    "docker:start:debug": "docker-compose --compatibility -f docker-compose.yml -f docker-compose.debug.yml up",
    "docker:stop": "docker-compose down",
    "docker:dbs:start": "docker-compose -f 'docker-compose.yml' up",
    "docker:dbs:stop": "docker-compose -f 'docker-compose.yml' down",
    "docker:test": "./bin/run-tests",
    "docker:test:be": "docker-compose run --rm backend yarn test",
    "docker:lint": "docker-compose run --rm backend yarn lint:ci && docker-compose run --rm frontend yarn lint:ci",
    "docker:lint:fix": "docker-compose run --rm backend yarn lint:fix && docker-compose run --rm frontend yarn lint:fix",
    "docker:shell:frontend": "docker-compose run --rm frontend /bin/bash",
    "docker:shell:backend": "docker-compose run --rm backend /bin/bash",
    "docker:db:migrate": "docker-compose run --rm backend node_modules/.bin/sequelize db:migrate",
    "docker:db:migrate:undo": "docker-compose run --rm backend node_modules/.bin/sequelize db:migrate:undo",
    "docker:db:seed": "docker-compose run --rm backend yarn db:seed",
    "docker:db:seed:undo": "docker-compose run --rm backend yarn db:seed:undo",
    "import:reports:local": "./node_modules/.bin/babel-node ./src/tools/importSSActivityReports.js",
    "import:reports": "node ./build/server/tools/importSSActivityReports.js",
    "import:goals:local": "./node_modules/.bin/babel-node ./src/tools/importTTAPlanGoals.js",
    "import:goals": "node ./build/server/tools/importTTAPlanGoals.js",
    "import:hses:local": "./node_modules/.bin/babel-node ./src/tools/importGrantRecipientsCLI.js --skipdownload",
    "import:hses": "node ./build/server/tools/importGrantRecipientsCLI.js",
    "reconcile:legacy": "node ./build/server/tools/reconcileLegacyReports.js",
    "reconcile:legacy:local": "./node_modules/.bin/babel-node ./src/tools/reconcileLegacyReports.js",
    "processData:local": "./node_modules/.bin/babel-node ./src/tools/processDataCLI.js",
    "changeReportStatus": "node ./build/server/tools/changeReportStatusCLI.js",
    "changeReportStatus:local": "./node_modules/.bin/babel-node ./src/tools/changeReportStatusCLI.js",
    "updateArDate": "./node_modules/.bin/babel-node ./src/tools/updateArDateCLI.js",
    "updateArDate:local": "./node_modules/.bin/babel-node ./src/tools/updateArDateCLI.js",
    "updateChildInvolvementTargetPopulation": "node ./build/server/tools/updateChildInvolvementTargetPopulationCLI.js",
    "updateChildInvolvementTargetPopulation:local": "./node_modules/.bin/babel-node ./src/tools/updateChildInvolvementTargetPopulationCLI.js",
    "updateChildInvolvementLegacyTargetPopulation": "node ./build/server/tools/updateChildInvolvementLegacyTargetPopulationCLI.js",
    "updateChildInvolvementLegacyTargetPopulation:local": "./node_modules/.bin/babel-node ./src/tools/updateChildInvolvementLegacyTargetPopulationCLI.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adhocteam/Head-Start-TTADP.git"
  },
  "resolutions": {
    "ansi-regex": "^5.0.1",
    "colors": "1.4.0",
    "follow-redirects": "^1.14.8",
    "json-pointer": "0.6.2",
    "marked": "^4.0.10",
    "minimist": "^1.2.6",
    "nanoid": "^3.2.0",
    "node-fetch": "^2.6.7"
  },
  "eslintConfig": {
    "extends": [
      "airbnb-base",
      "plugin:jest/recommended"
    ],
    "ignorePatterns": [
      "node_modules/*"
    ],
    "rules": {
      "linebreak-style": 0
    }
  },
  "eslint-formatter-multiple": {
    "formatters": [
      {
        "name": "stylish",
        "output": "console"
      },
      {
        "name": "junit",
        "output": "file",
        "path": "reports/lint.xml"
      }
    ]
  },
  "jest": {
    "testPathIgnorePatterns": [
      "<rootDir>/frontend/"
    ],
    "testTimeout": 30000,
    "coveragePathIgnorePatterns": [
      "<rootDir>/src/middleware/newRelicMiddleware.js"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 90,
        "functions": 90,
        "branches": 81,
        "lines": 90
      }
    }
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/adhocteam/Head-Start-TTADP/issues"
  },
  "homepage": "https://github.com/adhocteam/Head-Start-TTADP#readme",
  "nodemonConfig": {
    "ignore": [
      "./reports/",
      "./cucumber/",
      "./frontend/"
    ]
  },
  "devDependencies": {
    "@axe-core/cli": "4.3.1",
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.6",
    "@babel/node": "^7.10.5",
    "@babel/plugin-transform-runtime": "^7.11.0",
    "@babel/preset-env": "^7.11.5",
    "@cucumber/cucumber": "^7.0.0",
    "concurrently": "^7.0.0",
    "cross-env": "^7.0.2",
    "depcheck": "^1.2.0",
    "eslint": "^7.20.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-formatter-multiple": "^1.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jest": "^25.3.4",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-react": "^7.20.6",
    "jest": "26.6.0",
    "jest-cli": "^26.4.2",
    "jest-junit": "^12.0.0",
    "nodemon": "^2.0.4",
    "puppeteer": "^13.1.1",
    "puppeteer-select": "^1.0.3",
    "redoc-cli": "^0.13.2",
    "selenium-webdriver": "4.0.0",
    "supertest": "^6.1.3"
  },
  "dependencies": {
    "@babel/runtime": "^7.12.1",
    "@faker-js/faker": "^6.0.0",
    "adm-zip": "^0.5.1",
    "aws-sdk": "^2.826.0",
    "axios": "^0.24.0",
    "bull": "^4.2.0",
    "cheerio": "^1.0.0-rc.10",
    "client-oauth2": "^4.3.3",
    "cookie-session": "^2.0.0",
    "cron": "^1.8.2",
    "csv-parse": "^4.14.1",
    "csv-stringify": "^5.6.2",
    "cucumber-html-reporter": "^5.2.0",
    "dotenv": "^10.0.0",
    "email-templates": "^8.0.4",
    "express": "^4.17.1",
    "express-http-context": "^1.2.4",
    "express-unless": "^1.0.0",
    "express-winston": "^4.0.5",
    "file-type": "^16.1.0",
    "form-data": "^4.0.0",
    "helmet": "^5.0.1",
    "html-to-text": "^8.1.0",
    "http-codes": "^1.0.0",
    "lodash": "^4.17.20",
    "moment": "^2.29.1",
    "multiparty": "^4.2.2",
    "mz": "^2.7.0",
    "newrelic": "^8.7.0",
    "nodemailer": "^6.5.0",
    "pg": "^8.3.3",
    "sequelize": "^6.12.5",
    "sequelize-cli": "^6.2.0",
    "throng": "^5.0.0",
    "url-join": "^4.0.1",
    "uuid": "^8.3.2",
    "validator": "^13.7.0",
    "winston": "^3.3.3",
    "xml2json": "^0.12.0",
    "yargs": "^17.3.1",
    "yayson": "^2.1.0"
  }
}
