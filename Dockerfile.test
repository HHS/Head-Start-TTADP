FROM node:18.18.2 as base
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends dumb-init lcov chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
COPY package.json yarn.lock ./
RUN --mount=type=cache,target=/root/.yarn \
    YARN_CACHE_FOLDER=/root/.yarn \
    yarn global add node-gyp &&\
    yarn install

FROM node:18.18.2-alpine as frontend-base
WORKDIR /app
RUN apk update && apk add yarn dumb-init
COPY frontend/package.json frontend/yarn.lock ./
RUN --mount=type=cache,target=/root/.yarn \
    YARN_CACHE_FOLDER=/root/.yarn \
    yarn install

FROM node:18.18.2 as build
ENV NODE_OPTIONS=--max_old_space_size=2048
WORKDIR /app
COPY --from=base /app/node_modules /app/node_modules
COPY --from=base /app/package.json /app/package.json
COPY src/ /app/src/
COPY tests/ /app/tests/
COPY config/ /app/config/
RUN yarn tsc --build --verbose src

FROM node:18.18.2 as test
ENV NODE_OPTIONS=--max_old_space_size=2048
COPY --from=base /app/node_modules /app/node_modules
COPY --from=base /app/package.json /app/package.json
COPY --from=build /app/build/server/ /app/
COPY bin/test-backend-ci /app/bin/test-backend-ci
WORKDIR /app
# Set environment variables for Jest
ENV JEST_JUNIT_OUTPUT_DIR=reports \
    JEST_JUNIT_OUTPUT_NAME=unit.xml

# RUN ./bin/test-backend-ci
# RUN yarn cross-env node --expose-gc ./node_modules/.bin/jest --debug \
#     src/*.js \
#     --coverage \
#     --colors \
#     --reporters=jest-junit \
#     --reporters=default \
#     --runInBand \
#     --silent \
#     --collectCoverageFrom="**/!(*CLI).{js,ts}","**/!(migrations, mocks, queries, seeders, serializers)/*" \
#     --logHeapUsage \
#     --detectOpenHandles \
#     --forceExit

FROM node:18.18.2-alpine as frontend-build
ENV NODE_OPTIONS=--max_old_space_size=2048
WORKDIR /app
ENV DISABLE_ESLINT_PLUGIN=true
COPY --from=frontend-base /app/node_modules /app/node_modules
COPY ./frontend .
RUN yarn build:local

FROM node:18.18.2-alpine as frontend
RUN apk update
# ENV CHOKIDAR_USEPOLLING=true
WORKDIR /app
COPY --chown=node:node --from=frontend-base /usr/bin/dumb-init /usr/bin/dumb-init
COPY --chown=node:node --from=frontend-build /app/build /app
COPY --chown=node:node --from=frontend-build /app/node_modules /app/node_modules
COPY --chown=node:node --from=frontend-build /app/package.json /app/package.json
USER node
# CMD ["/usr/bin/dumb-init", "node", "server.js"]

FROM node:18.18.2-slim as backend
WORKDIR /app
COPY --chown=node:node .sequelizerc /app/.sequelizerc
COPY --chown=node:node --from=base /usr/bin/dumb-init /usr/bin/dumb-init
COPY --chown=node:node --from=build /app/build /app
COPY --chown=node:node --from=build /app/node_modules/ /app/node_modules/
COPY --chown=node:node --from=build /app/package.json /app/package.json
USER node
# CMD ["dumb-init", "node", "server.js"]

FROM backend as worker

FROM backend as testingonly